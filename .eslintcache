[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/pages/Library.js":"7","/Users/phanhoang/Documents/Project/client/src/api/index.js":"8","/Users/phanhoang/Documents/Project/client/src/component/category/category.js":"9","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"10","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"11","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"12","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"13","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"14","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"15","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"16","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"17"},{"size":754,"mtime":1612274438131,"results":"18","hashOfConfig":"19"},{"size":348,"mtime":1612422077938,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612166816275,"results":"21","hashOfConfig":"19"},{"size":728,"mtime":1613369460527,"results":"22","hashOfConfig":"19"},{"size":286,"mtime":1612173887191,"results":"23","hashOfConfig":"19"},{"size":1954,"mtime":1613369853527,"results":"24","hashOfConfig":"19"},{"size":763,"mtime":1613369357102,"results":"25","hashOfConfig":"19"},{"size":1390,"mtime":1613364496964,"results":"26","hashOfConfig":"19"},{"size":2460,"mtime":1612188828448,"results":"27","hashOfConfig":"19"},{"size":18299,"mtime":1613368046572,"results":"28","hashOfConfig":"19"},{"size":1644,"mtime":1612511954655,"results":"29","hashOfConfig":"19"},{"size":844,"mtime":1612188895765,"results":"30","hashOfConfig":"19"},{"size":189,"mtime":1613368457200,"results":"31","hashOfConfig":"19"},{"size":311,"mtime":1612274732172,"results":"32","hashOfConfig":"19"},{"size":78,"mtime":1613364576157,"results":"33","hashOfConfig":"19"},{"size":726,"mtime":1612419774056,"results":"34","hashOfConfig":"19"},{"size":309,"mtime":1613364752389,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1qfk95l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["73","74"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",["75","76"],"import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ListProducts } from \"./book/listBook\";\n\nexport const RouterComponent = () => {\n  return (\n    <div>\n      <Switch>{/* <Route path=\"/\" exact component={ListProducts} /> */}</Switch>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",["77","78"],"/Users/phanhoang/Documents/Project/client/src/pages/Library.js",[],"/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/category/category.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",["79","80","81","82","83"],"import React, { useState } from \"react\";\nimport { NavLink, Redirect, Link } from \"react-router-dom\";\nimport { RouterComponent } from \"../router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal, Button, Form, Col, CardGroup } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport {\n  FacebookLoginButton,\n  GoogleLoginButton,\n} from \"react-social-login-buttons\";\nimport {\n  urlSignInWithGoogle,\n  urlSignInWithFacebook,\n  checkLogin,\n  uploadAvatar,\n} from \"../../api/index.js\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n});\nconst validationSchemaRegister = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n  c_password: yup\n    .string()\n    .min(6, \"Confirm Password is less than 6 characters\")\n    .required(\"Confirm Password is required\")\n    .oneOf([yup.ref(\"password\")], \"Confirm Password not match\"),\n  dob: yup.date().required(\"Day of birth is required\"),\n  avatar: yup.string().required(\"Please choose a avatar\"),\n});\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const initialValuesRegister = {\n    email: \"\",\n    password: \"\",\n    dob: \"\",\n    avatar: \"\",\n  };\n  const [signInScreen, setSigInScreen] = useState(false);\n  const [signUpScreen, setSigUpScreen] = useState(false);\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const signInWithGoogle = () => {\n    return (window.location = urlSignInWithGoogle);\n  };\n  const signInWithFacebook = () => {\n    return (window.location = urlSignInWithFacebook);\n  };\n  const showSignIn = () => {\n    setSigInScreen(true);\n  };\n  const closeSignIn = () => {\n    setSigInScreen(false);\n  };\n  const showSignUp = async function () {\n    setSigUpScreen(true);\n  };\n  const closeSignUp = async function () {\n    setSigUpScreen(false);\n  };\n  const uploadMyAvatar = async (file) => {\n    const formData = new FormData();\n    formData.append(\"images\", file);\n    const result = await uploadAvatar(formData);\n    console.log(result);\n  };\n  return (\n    <div>\n      <Alert stack={{ limit: 3 }} />\n      {/* Mobile Nav (max width 767px)*/}\n      <div className=\"mobile-nav\">\n        {/* Navbar Brand */}\n        <div className=\"amado-navbar-brand\">\n          <a href=\"index.html\">\n            <img src=\"img/e-library.png\" alt=\"\" />\n          </a>\n        </div>\n        {/* Navbar Toggler */}\n        <div className=\"amado-navbar-toggler\">\n          <span />\n          <span />\n          <span />\n        </div>\n      </div>\n      {/* Header Area Start */}\n      <header className=\"header-area clearfix\">\n        {/* Close Icon */}\n        <div className=\"nav-close\">\n          <i className=\"fa fa-close\" aria-hidden=\"true\" />\n        </div>\n        {/* Logo */}\n        <div className=\"logo\">\n          <a href=\"index.html\">\n            <img src=\"img/e-library.png\" alt=\"\" />\n          </a>\n          {user.email ? (\n            <div className=\"user-area dropdown mt-5\">\n              <Link\n                to=\"#\"\n                className=\"dropdown-toggle active\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <img\n                  className=\"user-avatar rounded-circle\"\n                  style={{ float: \"left\" }}\n                  alt=\"User Avatar\"\n                  src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\n                />\n              </Link>\n              <div\n                className=\"user-menu dropdown-menu\"\n                style={{ fontSize: 100 }}\n              >\n                <Link to=\"/index\" className=\"nav-link\">\n                  <i className=\"fa fa- user\" />\n                  My Profile\n                </Link>\n                <Link to=\"/index\" className=\"nav-link\">\n                  <i className=\"fa fa-power -off\" />\n                  Logout\n                </Link>\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {/* Amado Nav */}\n        <nav className=\"amado-nav\">\n          <ul>\n            <li className=\"active\">\n              <NavLink to=\"/\">\n                Home <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/library\">\n                Library <i className=\"fa fa-book\" aria-hidden=\"true\"></i>\n              </NavLink>\n            </li>\n            <li>\n              <a href=\"cart.html\">\n                Cart <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" className=\"search-nav\">\n                Search <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n            <li>\n              <a href=\"#\" className=\"fav-nav\">\n                Favorite <i className=\"fa fa-heart\" aria-hidden=\"true\"></i>\n              </a>\n            </li>\n            {!user.email ? (\n              <div>\n                <li>\n                  <Button onClick={showSignIn} style={{ width: \"60%\" }}>\n                    SignIn <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                  </Button>\n                </li>\n                <li>\n                  <Button\n                    variant=\"success\"\n                    style={{ width: \"60%\" }}\n                    onClick={showSignUp}\n                  >\n                    SignUp{\" \"}\n                    <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                  </Button>\n                </li>\n              </div>\n            ) : null}\n          </ul>\n        </nav>\n      </header>\n      <RouterComponent />\n\n      <Modal\n        show={signInScreen}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={closeSignIn}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Sign In</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={async (values) => {\n              try {\n                const result = await checkLogin(values);\n                if (result.status === 200) {\n                  closeSignIn();\n                  localStorage.setItem(\"token\", result.data.token);\n                  dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n                  console.log(result.data);\n                  return Alert.success(\n                    `<div role=\"alert\"> Sign In Successfully </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                }\n              } catch (error) {\n                return Alert.error(\n                  `<div role=\"alert\">${error.response.data.message}</div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              }\n            }}\n            validationSchema={validationSchema}\n          >\n            {(props) => (\n              <Form className=\"form-horizontal\" onSubmit={props.handleSubmit}>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={3.5}>\n                      Email\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        style={{ width: \"60%\" }}\n                        placeholder=\"Enter your email\"\n                        className=\"ml-5\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={props.touched.email && props.errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.email && props.errors.email}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={1.7}>\n                      Password\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter you password\"\n                        style={{ width: \"65%\" }}\n                        className=\"ml-3\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={\n                          props.touched.password && props.errors.password\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.password && props.errors.password}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Modal.Footer>\n                  <Button type=\"submit\" style={{ height: 47 }}>\n                    Sign in <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                  </Button>\n                  <GoogleLoginButton\n                    onClick={signInWithGoogle}\n                  ></GoogleLoginButton>\n                  <FacebookLoginButton\n                    onClick={signInWithFacebook}\n                  ></FacebookLoginButton>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={signUpScreen} onHide={closeSignUp} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"card-body card-block\">\n            <Formik\n              initialValues={initialValues}\n              onSubmit={async (values) => {\n                //     try {\n                //       const result = await createPublisher(values);\n                //       if (result.status === 200) {\n                //         handleCloseCreate();\n                //         setReload(!reload);\n                //         return Alert.success(\n                //           `<div role=\"alert\">\n                //                                  ${result.data.message}\n                //                                 </div>`,\n                //           {\n                //             html: true,\n                //             position: \"top-right\",\n                //             effect: \"slide\",\n                //           }\n                //         );\n                //       }\n                //     } catch (error) {\n                //       handleCloseCreate();\n                //       return Alert.error(\n                //         `<div role=\"alert\">\n                //                                 ${error.response.data.message}\n                //                                 </div>`,\n                //         {\n                //           html: true,\n                //           position: \"top-right\",\n                //           effect: \"slide\",\n                //         }\n                //       );\n                //     }\n              }}\n              validationSchema={validationSchema}\n            >\n              {(props) => (\n                <Form\n                  className=\"form-horizontal ml-5\"\n                  onSubmit={props.handleSubmit}\n                >\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Email\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"email\"\n                          className=\"ml-5\"\n                          style={{ width: \"60%\" }}\n                          placeholder=\"Enter your email\"\n                          onChange={props.handleChange}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.email && props.errors.email}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.email && props.errors.email}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={1.7}>\n                        Password\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          className=\"ml-3\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter your password\"\n                          onChange={props.handleChange}\n                          onBlur={props.handleBlur}\n                          isInvalid={\n                            props.touched.password && props.errors.password\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.password && props.errors.password}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Confirm Password\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={3}\n                          type=\"password\"\n                          id=\"c_password\"\n                          name=\"c_password\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter confirm password\"\n                          onChange={props.handleChange}\n                          onBlur={props.handleBlur}\n                          isInvalid={\n                            props.touched.c_password && props.errors.c_password\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.c_password && props.errors.c_password}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Day Of Birth\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={3}\n                          type=\"Date\"\n                          id=\"dob\"\n                          name=\"dob\"\n                          className=\"ml-3\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter your day of birth\"\n                          onChange={props.handleChange}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.dob && props.errors.dob}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.dob && props.errors.dob}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>Avatar</Form.Label>\n                    <Form.File\n                      id=\"images\"\n                      name=\"images\"\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(e) => {\n                        uploadMyAvatar(e.target.files[0]);\n                      }}\n                    />\n                    <CardGroup className=\"mt-3\">\n                      {/* {images.map((item) => (\n                        <Card style={{ width: \"18rem\" }} className=\"mb-3 ml-3\">\n                          <i\n                            className=\"fa fa-times-circle\"\n                            aria-hidden=\"true\"\n                            style={{ float: \"right\" }}\n                          ></i>\n                          <Card.Img\n                            variant=\"top\"\n                            src={item}\n                            style={{ width: \"100%\", height: \"100%\" }}\n                          />\n                        </Card>\n                      ))} */}\n                    </CardGroup>\n                  </Form.Group>\n                  <Modal.Footer>\n                    <Button variant=\"success\" type=\"submit\">\n                      Sign Up\n                      <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </Modal.Footer>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":22},{"ruleId":"88","severity":1,"message":"93","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":38,"column":6,"nodeType":"96","endLine":38,"endColumn":8,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"98","line":2,"column":19,"nodeType":"90","messageId":"91","endLine":2,"endColumn":27},{"ruleId":"88","severity":1,"message":"99","line":28,"column":7,"nodeType":"90","messageId":"91","endLine":28,"endColumn":31},{"ruleId":"88","severity":1,"message":"100","line":48,"column":9,"nodeType":"90","messageId":"91","endLine":48,"endColumn":30},{"ruleId":"101","severity":1,"message":"102","line":163,"column":15,"nodeType":"103","endLine":163,"endColumn":50},{"ruleId":"101","severity":1,"message":"102","line":168,"column":15,"nodeType":"103","endLine":168,"endColumn":47},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'ListProducts' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'Redirect' is defined but never used.","'validationSchemaRegister' is assigned a value but never used.","'initialValuesRegister' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [getData]",{"range":"109","text":"110"},[1124,1126],"[getData]"]