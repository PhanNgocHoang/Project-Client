[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/api/index.js":"7","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"8","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"9","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"10","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"11","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"12","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"13","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"14","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"15","/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js":"16","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js":"17","/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js":"18","/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js":"19","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js":"20","/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js":"21","/Users/phanhoang/Documents/Project/client/src/component/myLibrary/myLibrary.js":"22","/Users/phanhoang/Documents/Project/client/src/component/book/book.read.js":"23","/Users/phanhoang/Documents/Project/client/src/component/me/updateMe.js":"24","/Users/phanhoang/Documents/Project/client/src/component/me/addCoins.history.js":"25","/Users/phanhoang/Documents/Project/client/src/component/privacy/index.js":"26","/Users/phanhoang/Documents/Project/client/src/component/category/category.js":"27"},{"size":754,"mtime":1612274438131,"results":"28","hashOfConfig":"29"},{"size":528,"mtime":1616049783186,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1612166816275,"results":"31","hashOfConfig":"29"},{"size":1285,"mtime":1614767229454,"results":"32","hashOfConfig":"29"},{"size":1100,"mtime":1616051141382,"results":"33","hashOfConfig":"29"},{"size":9656,"mtime":1616840858000,"results":"34","hashOfConfig":"29"},{"size":3431,"mtime":1619421269071,"results":"35","hashOfConfig":"29"},{"size":32723,"mtime":1619423166898,"results":"36","hashOfConfig":"29"},{"size":1876,"mtime":1618584304000,"results":"37","hashOfConfig":"29"},{"size":3270,"mtime":1615629519668,"results":"38","hashOfConfig":"29"},{"size":308,"mtime":1614580633314,"results":"39","hashOfConfig":"29"},{"size":312,"mtime":1614580603605,"results":"40","hashOfConfig":"29"},{"size":220,"mtime":1614580415000,"results":"41","hashOfConfig":"29"},{"size":802,"mtime":1618584076000,"results":"42","hashOfConfig":"29"},{"size":309,"mtime":1613364752389,"results":"43","hashOfConfig":"29"},{"size":19253,"mtime":1616841766000,"results":"44","hashOfConfig":"29"},{"size":1184,"mtime":1614738412055,"results":"45","hashOfConfig":"29"},{"size":312,"mtime":1614217545655,"results":"46","hashOfConfig":"29"},{"size":5792,"mtime":1616467298000,"results":"47","hashOfConfig":"29"},{"size":2684,"mtime":1614953435315,"results":"48","hashOfConfig":"29"},{"size":326,"mtime":1614580726820,"results":"49","hashOfConfig":"29"},{"size":18608,"mtime":1616841927000,"results":"50","hashOfConfig":"29"},{"size":5341,"mtime":1615630381549,"results":"51","hashOfConfig":"29"},{"size":10897,"mtime":1619198128000,"results":"52","hashOfConfig":"29"},{"size":3445,"mtime":1615534210502,"results":"53","hashOfConfig":"29"},{"size":1815,"mtime":1615629595449,"results":"54","hashOfConfig":"29"},{"size":13535,"mtime":1616466158000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1qfk95l",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["112","113"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",[],"/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",["114"],"import React, { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Modal,\n  Button,\n  Form,\n  Col,\n  CardGroup,\n  OverlayTrigger,\n  Popover,\n  ListGroup,\n  Image,\n  Spinner,\n  Card,\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from \"react-google-login\";\nimport {\n  checkLogin,\n  uploadAvatar,\n  signUp,\n  loginWithGoogle,\n  loginWithFacebook,\n  addCoins,\n  forgotPasswordApi,\n} from \"../../api/index.js\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport PayPal from \"../../utils/paypal\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n});\nconst validationSchemaRegister = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  displayName: yup.string().required(\"Name is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n  c_password: yup\n    .string()\n    .min(6, \"Confirm Password is less than 6 characters\")\n    .required(\"Confirm Password is required\")\n    .oneOf([yup.ref(\"password\")], \"Confirm password not match with password\"),\n  dob: yup.date().required(\"Day of birth is required\"),\n});\nconst validationMoneySchema = yup.object().shape({\n  money: yup\n    .number(\"Your money is not valid. Example: 1.1\")\n    .min(1, \"Minimum amount is 1 dollar\")\n    .required(\"Please enter a number money\"),\n});\nconst validationForgotPasswordSchema = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n});\nexport const Header = () => {\n  useAuth();\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(validationSchemaRegister),\n    mode: \"all\",\n    shouldFocusError: true,\n  });\n  const history = useHistory();\n  const [image, setImage] = useState();\n  const [updateStatus, setUpdateStatus] = useState(false);\n  const [formAddCoins, setFormAddCoins] = useState(false);\n  const dispatch = useDispatch();\n  const [forgotPassword, setForgotPassword] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(false);\n  const initialForgotPassword = {\n    email: \"\",\n  };\n  const initialMoney = {\n    money: 0,\n  };\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const [numberMoney, setNumberMoney] = useState(0);\n  const signInScreenStatus = useSelector((state) => {\n    return state.formLoginStatus;\n  });\n  const [signUpScreen, setSigUpScreen] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(false);\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const closeSignIn = () => {\n    dispatch({ type: \"FORM_LOGIN_STATUS\", payload: false });\n    history.push(\"/\");\n  };\n  useEffect(() => {}, [user]);\n  const closeSignUp = async function () {\n    setSigUpScreen(false);\n  };\n  const uploadMyAvatar = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n      setUpdateStatus(true);\n      const result = await uploadAvatar(formData);\n      setImage(result.data.url);\n      setUpdateStatus(false);\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\"> <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${\n          error.response.data.message ?? error.message\n        }</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const handleRegister = async (data) => {\n    try {\n      data.photoUrl = image;\n      data.role = \"USER\";\n      const response = await signUp(data);\n      return Alert.success(\n        `<div role=\"alert\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> ${response.data.message} </div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\"> <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${\n          error.response.data.message ?? error.message\n        }</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const logOut = async () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"_id\");\n    window.location.href = \"/\";\n  };\n  const responseGoogle = async (response) => {\n    if (response.accessToken) {\n      try {\n        const result = await loginWithGoogle({\n          access_token: response.accessToken,\n        });\n        localStorage.setItem(\"token\", result.data.token);\n        localStorage.setItem(\"_id\", result.data.user._id);\n        Alert.success(\n          `<div role=\"alert\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> Sign In Successfully </div>`,\n          {\n            html: true,\n            position: \"top-right\",\n            effect: \"slide\",\n          }\n        );\n        return (window.location.href = \"/\");\n      } catch (error) {\n        return Alert.error(\n          `<div role=\"alert\"> <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${error.response.data.message}</div>`,\n          {\n            html: true,\n            position: \"top-right\",\n            effect: \"slide\",\n          }\n        );\n      }\n    }\n  };\n  const responseFacebook = async (response) => {\n    if (response.accessToken) {\n      try {\n        const result = await loginWithFacebook({\n          access_token: response.accessToken,\n          user_id: response.id,\n        });\n        localStorage.setItem(\"token\", result.data.token);\n        localStorage.setItem(\"_id\", result.data.user._id);\n        Alert.success(\n          `<div role=\"alert\"> <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> Sign In Successfully </div>`,\n          {\n            html: true,\n            position: \"top-right\",\n            effect: \"slide\",\n          }\n        );\n        return (window.location.href = \"/\");\n      } catch (error) {\n        return Alert.error(\n          `<div role=\"alert\"> <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>${error.response.data.message}</div>`,\n          {\n            html: true,\n            position: \"top-right\",\n            effect: \"slide\",\n          }\n        );\n      }\n    }\n  };\n  const transactionSuccess = async (data) => {\n    try {\n      const response = await addCoins({\n        paymentId: data.paymentID,\n        userId: user._id,\n      });\n      setPaymentMethod(false);\n      return Alert.success(\n        `<div role=\"alert\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>  ${response.data.message} </div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\"> <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const transactionError = (err) => {\n    return Alert.error(\n      `<div role=\"alert\"> <i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${err.message}</div>`,\n      {\n        html: true,\n        position: \"top-right\",\n        effect: \"slide\",\n      }\n    );\n  };\n  const transactionCanceled = () => {\n    return Alert.success(\n      `<div role=\"alert\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> Transaction called successfully</div>`,\n      {\n        html: true,\n        position: \"top-right\",\n        effect: \"slide\",\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Alert stack={{ limit: 3 }} />\n      {/* Header Area Start */}\n      <div className=\"header-wrap animated d-flex border-bottom\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            {/*Desktop Logo*/}\n            <div className=\"logo col-md-2 col-lg-2 d-none d-lg-block\">\n              <NavLink to=\"/\">\n                <Image\n                  src=\"https://res.cloudinary.com/dps6fac1c/image/upload/v1613621648/images/e-library_uxmixc.png\"\n                  style={{ width: \"30%\", height: \"30%\" }}\n                />\n              </NavLink>\n            </div>\n            {/*End Desktop Logo*/}\n            <div className=\"col-2 col-sm-2 col-md-3 col-lg-7\">\n              <div className=\"d-block d-lg-none\">\n                <button\n                  type=\"button\"\n                  className=\"btn--link site-header__menu js-mobile-nav-toggle mobile-nav--open\"\n                >\n                  <i className=\"icon anm anm-times-l\" />\n                  <i className=\"anm anm-bars-r\" />\n                </button>\n              </div>\n              {/*Desktop Menu*/}\n              <nav className=\"grid__item\" id=\"AccessibleNav\">\n                {/* for mobile */}\n                <ul id=\"siteNav\" className=\"site-nav medium center hidearrow\">\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/\">Home </NavLink>\n                  </li>\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/library\">Library</NavLink>\n                  </li>\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/favorite\">Favorite</NavLink>\n                  </li>\n                  {user.email ? (\n                    <li>\n                      <NavLink to=\"/myLibrary\">My Library</NavLink>\n                    </li>\n                  ) : (\n                    <li\n                      className=\"lvl1 parent megamenu\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <NavLink\n                        to=\"#\"\n                        onClick={() => {\n                          dispatch({\n                            type: \"FORM_LOGIN_STATUS\",\n                            payload: true,\n                          });\n                        }}\n                      >\n                        Sign In\n                      </NavLink>\n                    </li>\n                  )}\n                  {user.email ? null : (\n                    <li\n                      className=\"lvl1 parent megamenu\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <NavLink to=\"#\" onClick={() => setSigUpScreen(true)}>\n                        Sign Up\n                      </NavLink>\n                    </li>\n                  )}\n                </ul>\n              </nav>\n              {/*End Desktop Menu*/}\n            </div>\n            {/*Mobile Logo*/}\n            <div className=\"col-6 col-sm-6 col-md-5 col-lg-1 d-block d-lg-none mobile-logo\">\n              <div className=\"logo\">\n                <NavLink to=\"/\">\n                  <Image\n                    src=\"https://res.cloudinary.com/dps6fac1c/image/upload/v1613621648/images/e-library_uxmixc.png\"\n                    style={{ width: \"50%\", height: \"50%\" }}\n                  />\n                </NavLink>\n              </div>\n            </div>\n            {/*Mobile Logo*/}\n            <div className=\"col-4 col-sm-4 col-md-4 col-lg-3\">\n              <div className=\"site-cart\">\n                {user.email ? (\n                  <OverlayTrigger\n                    placement=\"auto\"\n                    trigger=\"click\"\n                    overlay={\n                      <Popover>\n                        <Popover.Title as=\"h3\">\n                          {user.displayName}\n                        </Popover.Title>\n                        <Popover.Content>\n                          <ListGroup variant=\"flush\">\n                            <ListGroup.Item\n                              onClick={() => {\n                                document.getElementById(\"user\").click();\n                              }}\n                            >\n                              <NavLink to=\"/me\">Update Profile</NavLink>\n                            </ListGroup.Item>\n                            <ListGroup.Item\n                              onClick={() => {\n                                document.getElementById(\"user\").click();\n                              }}\n                            >\n                              <NavLink to=\"/addCoinsHistory\">\n                                Coin deposit history\n                              </NavLink>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                              My eCoins: {user.wallet}\n                            </ListGroup.Item>\n                            <ListGroup.Item\n                              style={{ cursor: \"pointer\" }}\n                              onClick={() => {\n                                setFormAddCoins(true);\n                                document.getElementById(\"user\").click();\n                              }}\n                            >\n                              Add eCoins\n                            </ListGroup.Item>\n                            <ListGroup.Item\n                              onClick={() => {\n                                logOut();\n                              }}\n                              style={{ cursor: \"pointer\" }}\n                            >\n                              LogOut\n                            </ListGroup.Item>\n                          </ListGroup>\n                        </Popover.Content>\n                      </Popover>\n                    }\n                  >\n                    <div id=\"user\">\n                      <Image\n                        src={user.photoUrl}\n                        className=\"border rounded-circle\"\n                        style={{\n                          width: 35,\n                          height: 35,\n                          marginLeft: \"3%\",\n                          cursor: \"pointer\",\n                        }}\n                      />\n                    </div>\n                  </OverlayTrigger>\n                ) : null}\n              </div>\n              <div className=\"site-header__search\">\n                <button type=\"button\" className=\"search-trigger\">\n                  <i className=\"icon anm anm-search-l\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mobile-nav-wrapper\" role=\"navigation\">\n        <ul id=\"MobileNav\" className=\"mobile-nav\">\n          {user.email ? (\n            <li>\n              <NavLink to=\"/myLibrary\">My Library</NavLink>\n            </li>\n          ) : (\n            <li className=\"lvl1 parent megamenu\" style={{ cursor: \"pointer\" }}>\n              <NavLink\n                to=\"#\"\n                onClick={() => {\n                  dispatch({\n                    type: \"FORM_LOGIN_STATUS\",\n                    payload: true,\n                  });\n                }}\n              >\n                Sign In\n              </NavLink>\n            </li>\n          )}\n          {user.email ? null : (\n            <li className=\"lvl1 parent megamenu\" style={{ cursor: \"pointer\" }}>\n              <NavLink to=\"#\" onClick={() => setSigUpScreen(true)}>\n                Sign Up\n              </NavLink>\n            </li>\n          )}\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/library\">Library</NavLink>\n          </li>\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/favorite\">Favorite</NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Modal\n        show={signInScreenStatus.data}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={closeSignIn}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Sign In</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={async (values) => {\n              try {\n                setSubmitStatus(true);\n                const result = await checkLogin(values);\n                if (result.status === 200) {\n                  localStorage.setItem(\"token\", result.data.token);\n                  localStorage.setItem(\"_id\", result.data.user._id);\n                  setSubmitStatus(false);\n                  Alert.success(\n                    `<div role=\"alert\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i> Sign In Successfully </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                  return (window.location.href = \"/\");\n                }\n              } catch (error) {\n                setSubmitStatus(false);\n                return Alert.error(\n                  `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${error.response.data.message}</div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              }\n            }}\n            validationSchema={validationSchema}\n          >\n            {(props) => (\n              <Form className=\"form-horizontal\" onSubmit={props.handleSubmit}>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={3.5}>\n                      Email\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        style={{ width: \"60%\" }}\n                        placeholder=\"Enter your email\"\n                        className=\"ml-5\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={props.touched.email && props.errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.email && props.errors.email}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={1.7}>\n                      Password\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter you password\"\n                        style={{ width: \"65%\" }}\n                        className=\"ml-3\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={\n                          props.touched.password && props.errors.password\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.password && props.errors.password}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Modal.Footer>\n                  <Button\n                    type=\"submit\"\n                    style={{ height: 47, width: 150, borderRadius: 4 }}\n                    disabled={submitStatus}\n                  >\n                    Sign in <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                  </Button>\n                  <GoogleLogin\n                    clientId=\"262517224867-kufcnkfvmehbscpl4q8tgvpd9sru5hpg.apps.googleusercontent.com\"\n                    buttonText=\"SignIn With Google\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={\"single_host_origin\"}\n                  />\n                  <FacebookLogin\n                    appId=\"322522312399138\"\n                    autoLoad={false}\n                    callback={responseFacebook}\n                    size=\"small\"\n                    icon=\"fa-facebook\"\n                  />\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n        <Modal.Footer>\n          <u\n            style={{\n              color: \"#66c2ff\",\n              fontStyle: \"oblique\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              dispatch({ type: \"FORM_LOGIN_STATUS\", payload: false });\n              setForgotPassword(true);\n            }}\n          >\n            Forgot Password{\" \"}\n          </u>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={signUpScreen}\n        onHide={closeSignUp}\n        size=\"lg\"\n        centered\n        aria-labelledby=\"contained-modal-title-vcenter\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"card-body card-block\">\n            <Form\n              className=\"form-horizontal ml-5\"\n              onSubmit={handleSubmit(handleRegister)}\n            >\n              <Form.Group>\n                <Form.Row>\n                  <Form.Label column lg={3.5}>\n                    Email\n                  </Form.Label>\n                  <Col>\n                    <Form.Control\n                      lg={4}\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      className=\"ml-5\"\n                      ref={register}\n                      style={{ width: \"60%\" }}\n                      placeholder=\"Enter your email\"\n                      isInvalid={errors.email?.message}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.email?.message}\n                    </Form.Control.Feedback>\n                  </Col>\n                </Form.Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Row>\n                  <Form.Label column lg={3.5}>\n                    Name\n                  </Form.Label>\n                  <Col>\n                    <Form.Control\n                      lg={4}\n                      type=\"name\"\n                      id=\"name\"\n                      name=\"displayName\"\n                      ref={register}\n                      className=\"ml-5\"\n                      style={{ width: \"60%\" }}\n                      placeholder=\"Enter your name\"\n                      isInvalid={errors.name?.message}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name?.message}\n                    </Form.Control.Feedback>\n                  </Col>\n                </Form.Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Row>\n                  <Form.Label column lg={1.7}>\n                    Password\n                  </Form.Label>\n                  <Col>\n                    <Form.Control\n                      lg={4}\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      ref={register}\n                      className=\"ml-3\"\n                      style={{ width: \"63%\" }}\n                      placeholder=\"Enter your password\"\n                      isInvalid={errors.password?.message}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.password?.message}\n                    </Form.Control.Feedback>\n                  </Col>\n                </Form.Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Row>\n                  <Form.Label column lg={3.5}>\n                    Confirm Password\n                  </Form.Label>\n                  <Col>\n                    <Form.Control\n                      lg={3}\n                      type=\"password\"\n                      id=\"c_password\"\n                      name=\"c_password\"\n                      ref={register}\n                      style={{ width: \"63%\" }}\n                      placeholder=\"Enter confirm password\"\n                      isInvalid={errors.c_password?.message}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.c_password?.message}\n                    </Form.Control.Feedback>\n                  </Col>\n                </Form.Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Row>\n                  <Form.Label column lg={3.5}>\n                    Day Of Birth\n                  </Form.Label>\n                  <Col>\n                    <Form.Control\n                      lg={3}\n                      type=\"Date\"\n                      id=\"dob\"\n                      name=\"dob\"\n                      className=\"ml-3\"\n                      ref={register}\n                      style={{ width: \"63%\" }}\n                      placeholder=\"Enter your day of birth\"\n                      isInvalid={errors.dob?.message}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.dob?.message}\n                    </Form.Control.Feedback>\n                  </Col>\n                </Form.Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Avatar</Form.Label>\n                <Form.File\n                  disabled={updateStatus}\n                  id=\"photoUrl\"\n                  name=\"photoUrl\"\n                  accept=\"image/png, image/jpeg\"\n                  onChange={(e) => {\n                    uploadMyAvatar(e.target.files[0]);\n                  }}\n                />\n                {image ? (\n                  <Card style={{ width: \"18rem\" }} className=\"mt-3 mb-3 ml-3\">\n                    <Card.Img\n                      variant=\"top\"\n                      src={image}\n                      style={{ width: \"30%\", height: \"100%\" }}\n                    />\n                  </Card>\n                ) : null}\n              </Form.Group>\n              <Modal.Footer>\n                <Button\n                  type=\"submit\"\n                  variant=\"success\"\n                  disabled={image ? submitStatus : true}\n                >\n                  {submitStatus ? (\n                    <Spinner animation=\"border\" variant=\"info\" />\n                  ) : (\n                    <i className=\"fa fa-user-plus\" aria-hidden=\"true\">\n                      Sign Up\n                    </i>\n                  )}\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </div>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={formAddCoins}\n        onHide={() => {\n          setFormAddCoins(false);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add eCoins\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialMoney}\n            validationSchema={validationMoneySchema}\n            onSubmit={(value) => {\n              setFormAddCoins(false);\n              setPaymentMethod(true);\n              setNumberMoney(value.money);\n            }}\n          >\n            {(props) => (\n              <Form\n                onSubmit={props.handleSubmit}\n                id=\"new-review-form\"\n                className=\"new-review-form\"\n              >\n                <Form.Label column lg={3.5}>\n                  Amount of money: Unit $(USD)\n                </Form.Label>\n                <Form.Control\n                  lg={4}\n                  type=\"text\"\n                  name=\"money\"\n                  placeholder=\"Enter you money\"\n                  style={{ width: \"65%\" }}\n                  className=\"ml-3\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  isInvalid={props.touched.money && props.errors.money}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {props.touched.money && props.errors.money}\n                </Form.Control.Feedback>\n                <Modal.Footer>\n                  <Button className=\"btn btn-primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={paymentMethod}\n        onHide={() => {\n          setPaymentMethod(false);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Method\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PayPal\n            toPay={numberMoney}\n            onSuccess={transactionSuccess}\n            transactionError={transactionError}\n            transactionCanceled={transactionCanceled}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => {\n              setPaymentMethod(false);\n            }}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        show={forgotPassword}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={() => {\n          setForgotPassword(false);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Forgot Password\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialForgotPassword}\n            onSubmit={async (value) => {\n              try {\n                const result = await forgotPasswordApi(value);\n                setForgotPassword(false);\n                return Alert.success(\n                  `<div role=\"alert\"><i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>  ${result.data.message} </div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              } catch (error) {\n                setForgotPassword(false);\n                return Alert.error(\n                  `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>${error.response.data.message} </div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              }\n            }}\n            validationSchema={validationForgotPasswordSchema}\n          >\n            {(props) => (\n              <Form onSubmit={props.handleSubmit}>\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  isInvalid={props.touched.email && props.errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {props.touched.email && props.errors.email}\n                </Form.Control.Feedback>\n                <Modal.Footer>\n                  <Button type=\"submit\" disabled={submitStatus}>\n                    {submitStatus ? (\n                      <Spinner animation=\"border\" variant=\"info\" />\n                    ) : (\n                      \"Send\"\n                    )}\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/slide.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js",[],"/Users/phanhoang/Documents/Project/client/src/utils/paypal.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js",[],"/Users/phanhoang/Documents/Project/client/src/component/myLibrary/myLibrary.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book.read.js",[],"/Users/phanhoang/Documents/Project/client/src/component/me/updateMe.js",[],"/Users/phanhoang/Documents/Project/client/src/component/me/addCoins.history.js",[],"/Users/phanhoang/Documents/Project/client/src/component/privacy/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/category/category.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":9,"column":3,"nodeType":"121","messageId":"122","endLine":9,"endColumn":12},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'CardGroup' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]