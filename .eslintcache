[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/pages/Library.js":"7","/Users/phanhoang/Documents/Project/client/src/api/index.js":"8","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"9","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"10","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"11","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"12","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"13","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"14","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"15","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"16","/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js":"17","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js":"18","/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js":"19","/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js":"20"},{"size":754,"mtime":1612274438131,"results":"21","hashOfConfig":"22"},{"size":525,"mtime":1613553364374,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1612166816275,"results":"24","hashOfConfig":"22"},{"size":1276,"mtime":1614176977133,"results":"25","hashOfConfig":"22"},{"size":564,"mtime":1614398308577,"results":"26","hashOfConfig":"22"},{"size":3601,"mtime":1614237254158,"results":"27","hashOfConfig":"22"},{"size":11413,"mtime":1614414865710,"results":"28","hashOfConfig":"22"},{"size":2249,"mtime":1614414560589,"results":"29","hashOfConfig":"22"},{"size":32067,"mtime":1614413388892,"results":"30","hashOfConfig":"22"},{"size":2809,"mtime":1614219045988,"results":"31","hashOfConfig":"22"},{"size":2476,"mtime":1613558842888,"results":"32","hashOfConfig":"22"},{"size":246,"mtime":1614217574237,"results":"33","hashOfConfig":"22"},{"size":311,"mtime":1612274732172,"results":"34","hashOfConfig":"22"},{"size":166,"mtime":1614217535617,"results":"35","hashOfConfig":"22"},{"size":726,"mtime":1614174627076,"results":"36","hashOfConfig":"22"},{"size":309,"mtime":1613364752389,"results":"37","hashOfConfig":"22"},{"size":14189,"mtime":1614389480757,"results":"38","hashOfConfig":"22"},{"size":1223,"mtime":1614222755452,"results":"39","hashOfConfig":"22"},{"size":312,"mtime":1614217545655,"results":"40","hashOfConfig":"22"},{"size":6250,"mtime":1614239690929,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1qfk95l",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["87","88"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",["89"],"import React, { useEffect } from \"react\";\nimport Alert from \"react-s-alert\";\nimport queryString from \"query-string\";\nimport { getBook } from \"../../api/index\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as types from \"../../constants/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { Image } from \"react-bootstrap\";\nexport const Books = (props) => {\n  const dispatch = useDispatch();\n  const getData = async () => {\n    try {\n      const paramsString = queryString.stringify(props.pagination);\n      const result = await getBook(paramsString);\n      if (result.status === 200) {\n        dispatch({ type: types.NEW_BOOKS, payload: result.data.data.data });\n      }\n    } catch (error) {\n      return Alert.error(`<div role=\"alert\">Can Not Get New Book</div>`, {\n        html: true,\n        position: \"top-right\",\n        effect: \"slide\",\n      });\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [props.pagination]);\n  const newBooks = useSelector((state) => {\n    return state.newBooks.data;\n  });\n  return (\n    <div className=\"row\">\n      {newBooks !== {}\n        ? newBooks.map((item) => (\n            <div className={props.position} key={item._id}>\n              {/* start product image */}\n              <NavLink to={`books/${item._id}`}>\n                <div className=\"product-image\">\n                  {/* start product image */}\n                  <div className=\"grid-view-item__link\">\n                    <Image\n                      className=\"lazyload\"\n                      data-src={item.images}\n                      src={item.images}\n                      alt=\"image\"\n                      title={item.description}\n                    />\n                  </div>\n                  <button\n                    className=\"btn btn-addto-cart\"\n                    type=\"button\"\n                    style={{ marginTop: 3 }}\n                    tabIndex={0}\n                  >\n                    Add To Cart\n                  </button>\n                  <div className=\"button-set\">\n                    <div className=\"wishlist-btn\">\n                      <button className=\"wishlist add-to-wishlist\">\n                        <i className=\"icon anm anm-heart-l\" />\n                      </button>\n                    </div>\n                  </div>\n                  {/* end product button */}\n                </div>\n                {/* end product image */}\n                {/*start product details */}\n                <div className=\"product-details text-center\">\n                  {/* product name */}\n                  <div className=\"product-name\">\n                    <NavLink to={`books/${item._id}`}>{item.book_name}</NavLink>\n                  </div>\n                  <div className=\"product-price\">\n                    {item.authors.map((author) => (\n                      <span key={author._id} className=\"price\">\n                        {\" \"}\n                        {author.authorName}\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"product-price\">\n                    <span className=\"price\">\n                      {item.publisher.publisherName}\n                    </span>\n                  </div>\n                  <div className=\"product-price\">\n                    <span className=\"price\">{item.price} eCoins/day</span>\n                  </div>\n                </div>\n              </NavLink>\n            </div>\n          ))\n        : null}\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/pages/Library.js",["90"],"/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Modal,\n  Button,\n  Form,\n  Col,\n  CardGroup,\n  OverlayTrigger,\n  Popover,\n  ListGroup,\n  Image,\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from \"react-google-login\";\nimport {\n  checkLogin,\n  uploadAvatar,\n  register,\n  loginWithGoogle,\n  loginWithFacebook,\n} from \"../../api/index.js\";\nimport { useAuth } from \"../../hooks/useAuth\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n});\nconst validationSchemaRegister = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  name: yup.string().required(\"Name is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n  c_password: yup\n    .string()\n    .min(6, \"Confirm Password is less than 6 characters\")\n    .required(\"Confirm Password is required\")\n    .oneOf([yup.ref(\"password\")], \"Confirm password not match with password\"),\n  dob: yup.date().required(\"Day of birth is required\"),\n  photoUrl: yup.string().required(\"Please choose a avatar\"),\n});\nexport const Header = () => {\n  useAuth();\n  const dispatch = useDispatch();\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const initialValuesRegister = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    // c_password: \"\",\n    dob: \"\",\n    photoUrl: \"\",\n  };\n  const [signInScreen, setSigInScreen] = useState(false);\n  const [signUpScreen, setSigUpScreen] = useState(false);\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const closeSignIn = () => {\n    setSigInScreen(false);\n  };\n  const closeSignUp = async function () {\n    setSigUpScreen(false);\n  };\n  const uploadMyAvatar = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const result = await uploadAvatar(formData);\n    initialValuesRegister.photoUrl = result.data.url;\n  };\n  const logOut = async () => {\n    localStorage.removeItem(\"token\");\n    window.location = \"/\";\n  };\n  const responseGoogle = async (response) => {\n    try {\n      const result = await loginWithGoogle({\n        access_token: response.accessToken,\n      });\n      if (result.status === 200) {\n        setSigInScreen(false);\n        localStorage.setItem(\"token\", result.data.token);\n        dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n        return Alert.success(`<div role=\"alert\"> Sign In Successfully </div>`, {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        });\n      }\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const responseFacebook = async (response) => {\n    try {\n      const result = await loginWithFacebook({\n        access_token: response.accessToken,\n        user_id: response.id,\n      });\n      if (result.status === 200) {\n        setSigInScreen(false);\n        localStorage.setItem(\"token\", result.data.token);\n        dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n        return Alert.success(`<div role=\"alert\"> Sign In Successfully </div>`, {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        });\n      }\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  return (\n    <div>\n      <Alert stack={{ limit: 3 }} />\n      {/* Header Area Start */}\n      <div className=\"header-wrap animated d-flex border-bottom\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            {/*Desktop Logo*/}\n            <div className=\"logo col-md-2 col-lg-2 d-none d-lg-block\">\n              <NavLink to=\"/\">\n                <Image\n                  src=\"https://res.cloudinary.com/dps6fac1c/image/upload/v1613621648/images/e-library_uxmixc.png\"\n                  style={{ width: \"30%\", height: \"30%\" }}\n                />\n              </NavLink>\n            </div>\n            {/*End Desktop Logo*/}\n            <div className=\"col-2 col-sm-2 col-md-3 col-lg-7\">\n              <div className=\"d-block d-lg-none\">\n                <button\n                  type=\"button\"\n                  className=\"btn--link site-header__menu js-mobile-nav-toggle mobile-nav--open\"\n                >\n                  <i className=\"icon anm anm-times-l\" />\n                  <i className=\"anm anm-bars-r\" />\n                </button>\n              </div>\n              {/*Desktop Menu*/}\n              <nav className=\"grid__item\" id=\"AccessibleNav\">\n                {/* for mobile */}\n                <ul id=\"siteNav\" className=\"site-nav medium center hidearrow\">\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/\">Home</NavLink>\n                  </li>\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/library\">Library</NavLink>\n                  </li>\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/favorite\">Favorite</NavLink>\n                  </li>\n                  {user.email ? (\n                    <li>\n                      <OverlayTrigger\n                        placement=\"bottom\"\n                        trigger=\"click\"\n                        overlay={\n                          <Popover>\n                            <Popover.Title as=\"h3\">\n                              {user.displayName}\n                            </Popover.Title>\n                            <Popover.Content>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  <NavLink to=\"/me\">Update Profile</NavLink>\n                                </ListGroup.Item>\n                                <ListGroup.Item>My Book</ListGroup.Item>\n                                <ListGroup.Item>\n                                  Borrowing history\n                                </ListGroup.Item>\n                                <ListGroup.Item\n                                  onClick={() => {\n                                    logOut();\n                                  }}\n                                >\n                                  LogOut\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Popover.Content>\n                          </Popover>\n                        }\n                      >\n                        <div>\n                          <img\n                            src={user.photoUrl}\n                            alt=\"\"\n                            className=\"border rounded-circle\"\n                            style={{ width: 35, marginLeft: \"3%\" }}\n                          />\n                        </div>\n                      </OverlayTrigger>\n                    </li>\n                  ) : (\n                    <li\n                      className=\"lvl1 parent megamenu\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <a onClick={() => setSigInScreen(true)}>Sign In</a>\n                    </li>\n                  )}\n                  {user.email ? null : (\n                    <li\n                      className=\"lvl1 parent megamenu\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <a onClick={() => setSigUpScreen(true)}>Sign Up</a>\n                    </li>\n                  )}\n                </ul>\n              </nav>\n              {/*End Desktop Menu*/}\n            </div>\n            {/*Mobile Logo*/}\n            <div className=\"col-6 col-sm-6 col-md-5 col-lg-1 d-block d-lg-none mobile-logo\">\n              <div className=\"logo\">\n                <a href=\"index.html\">\n                  <Image\n                    src=\"https://res.cloudinary.com/dps6fac1c/image/upload/v1613621648/images/e-library_uxmixc.png\"\n                    style={{ width: \"50%\", height: \"50%\" }}\n                  />\n                </a>\n              </div>\n            </div>\n            {/*Mobile Logo*/}\n            <div className=\"col-4 col-sm-4 col-md-4 col-lg-3\">\n              <div className=\"site-cart\">\n                <a href=\"#\" className=\"site-header__cart\" title=\"Cart\">\n                  <i className=\"icon anm anm-bag-l\" />\n                  <span\n                    id=\"CartCount\"\n                    className=\"site-header__cart-count\"\n                    data-cart-render=\"item_count\"\n                  >\n                    2\n                  </span>\n                </a>\n                {/*Minicart Popup*/}\n                <div id=\"header-cart\" className=\"block block-cart\">\n                  <ul className=\"mini-products-list\">\n                    <li className=\"item\">\n                      <a className=\"product-image\" href=\"#\">\n                        <img\n                          src=\"assets/images/product-images/cape-dress-1.jpg\"\n                          alt=\"3/4 Sleeve Kimono Dress\"\n                          title\n                        />\n                      </a>\n                      <div className=\"product-details\">\n                        <a href=\"#\" className=\"remove\">\n                          <i className=\"anm anm-times-l\" aria-hidden=\"true\" />\n                        </a>\n                        <a href=\"#\" className=\"edit-i remove\">\n                          <i className=\"anm anm-edit\" aria-hidden=\"true\" />\n                        </a>\n                        <a className=\"pName\" href=\"cart.html\">\n                          Sleeve Kimono Dress\n                        </a>\n                        <div className=\"variant-cart\">Black / XL</div>\n                        <div className=\"wrapQtyBtn\">\n                          <div className=\"qtyField\">\n                            <span className=\"label\">Qty:</span>\n                            <a\n                              className=\"qtyBtn minus\"\n                              href=\"javascript:void(0);\"\n                            >\n                              <i\n                                className=\"fa anm anm-minus-r\"\n                                aria-hidden=\"true\"\n                              />\n                            </a>\n                            <input\n                              type=\"text\"\n                              id=\"Quantity\"\n                              name=\"quantity\"\n                              defaultValue={1}\n                              className=\"product-form__input qty\"\n                            />\n                            <a\n                              className=\"qtyBtn plus\"\n                              href=\"javascript:void(0);\"\n                            >\n                              <i\n                                className=\"fa anm anm-plus-r\"\n                                aria-hidden=\"true\"\n                              />\n                            </a>\n                          </div>\n                        </div>\n                        <div className=\"priceRow\">\n                          <div className=\"product-price\">\n                            <span className=\"money\">$59.00</span>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                    <li className=\"item\">\n                      <a className=\"product-image\" href=\"#\">\n                        <img\n                          src=\"assets/images/product-images/cape-dress-2.jpg\"\n                          alt=\"Elastic Waist Dress - Black / Small\"\n                          title\n                        />\n                      </a>\n                      <div className=\"product-details\">\n                        <a href=\"#\" className=\"remove\">\n                          <i className=\"anm anm-times-l\" aria-hidden=\"true\" />\n                        </a>\n                        <a href=\"#\" className=\"edit-i remove\">\n                          <i className=\"anm anm-edit\" aria-hidden=\"true\" />\n                        </a>\n                        <a className=\"pName\" href=\"cart.html\">\n                          Elastic Waist Dress\n                        </a>\n                        <div className=\"variant-cart\">Gray / XXL</div>\n                        <div className=\"wrapQtyBtn\">\n                          <div className=\"qtyField\">\n                            <span className=\"label\">Qty:</span>\n                            <a\n                              className=\"qtyBtn minus\"\n                              href=\"javascript:void(0);\"\n                            >\n                              <i\n                                className=\"fa anm anm-minus-r\"\n                                aria-hidden=\"true\"\n                              />\n                            </a>\n                            <input\n                              type=\"text\"\n                              id=\"Quantity\"\n                              name=\"quantity\"\n                              defaultValue={1}\n                              className=\"product-form__input qty\"\n                            />\n                            <a\n                              className=\"qtyBtn plus\"\n                              href=\"javascript:void(0);\"\n                            >\n                              <i\n                                className=\"fa anm anm-plus-r\"\n                                aria-hidden=\"true\"\n                              />\n                            </a>\n                          </div>\n                        </div>\n                        <div className=\"priceRow\">\n                          <div className=\"product-price\">\n                            <span className=\"money\">$99.00</span>\n                          </div>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                  <div className=\"total\">\n                    <div className=\"total-in\">\n                      <span className=\"label\">Cart Subtotal:</span>\n                      <span className=\"product-price\">\n                        <span className=\"money\">$748.00</span>\n                      </span>\n                    </div>\n                    <div className=\"buttonSet text-center\">\n                      <a\n                        href=\"cart.html\"\n                        className=\"btn btn-secondary btn--small\"\n                      >\n                        View Cart\n                      </a>\n                      <a\n                        href=\"checkout.html\"\n                        className=\"btn btn-secondary btn--small\"\n                      >\n                        Checkout\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                {/*End Minicart Popup*/}\n              </div>\n              <div className=\"site-header__search\">\n                <button type=\"button\" className=\"search-trigger\">\n                  <i className=\"icon anm anm-search-l\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mobile-nav-wrapper\" role=\"navigation\">\n        <div className=\"closemobileMenu\">\n          <i className=\"icon anm anm-times-l pull-right\" /> Close Menu\n        </div>\n        <ul id=\"MobileNav\" className=\"mobile-nav\">\n          {user.email ? (\n            <li>\n              <OverlayTrigger\n                placement=\"auto\"\n                trigger=\"click\"\n                overlay={\n                  <Popover>\n                    <Popover.Title as=\"h3\">{user.displayName}</Popover.Title>\n                    <Popover.Content>\n                      <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                          <NavLink to=\"/me\">Update Profile</NavLink>\n                        </ListGroup.Item>\n                        <ListGroup.Item>My Book</ListGroup.Item>\n                        <ListGroup.Item>Borrowing history</ListGroup.Item>\n                        <ListGroup.Item>LogOut</ListGroup.Item>\n                      </ListGroup>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <div>\n                  <Image\n                    src={user.photoUrl}\n                    alt=\"\"\n                    className=\"border rounded-circle\"\n                    style={{ width: 35, marginLeft: \"3%\" }}\n                  />\n                  <span style={{ marginLeft: 5 }}>{user.displayName}</span>\n                </div>\n              </OverlayTrigger>\n            </li>\n          ) : (\n            <li className=\"lvl1 parent megamenu\" style={{ cursor: \"pointer\" }}>\n              <a onClick={() => setSigInScreen(true)}>Sign In</a>\n            </li>\n          )}\n          {user.email ? null : (\n            <li className=\"lvl1 parent megamenu\" style={{ cursor: \"pointer\" }}>\n              <a onClick={() => setSigUpScreen(true)}>Sign Up</a>\n            </li>\n          )}\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/library\">Library</NavLink>\n          </li>\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/library\">Favorite</NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Modal\n        show={signInScreen}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={closeSignIn}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Sign In</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={async (values) => {\n              try {\n                const result = await checkLogin(values);\n                if (result.status === 200) {\n                  closeSignIn();\n                  localStorage.setItem(\"token\", result.data.token);\n                  dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n                  return Alert.success(\n                    `<div role=\"alert\"> Sign In Successfully </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                }\n              } catch (error) {\n                return Alert.error(\n                  `<div role=\"alert\">${error.response.data.message}</div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              }\n            }}\n            validationSchema={validationSchema}\n          >\n            {(props) => (\n              <Form className=\"form-horizontal\" onSubmit={props.handleSubmit}>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={3.5}>\n                      Email\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        style={{ width: \"60%\" }}\n                        placeholder=\"Enter your email\"\n                        className=\"ml-5\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={props.touched.email && props.errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.email && props.errors.email}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={1.7}>\n                      Password\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter you password\"\n                        style={{ width: \"65%\" }}\n                        className=\"ml-3\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={\n                          props.touched.password && props.errors.password\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.password && props.errors.password}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Modal.Footer>\n                  <Button\n                    type=\"submit\"\n                    style={{ height: 47, width: 150, borderRadius: 4 }}\n                  >\n                    Sign in <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                  </Button>\n                  <GoogleLogin\n                    clientId=\"262517224867-kufcnkfvmehbscpl4q8tgvpd9sru5hpg.apps.googleusercontent.com\"\n                    buttonText=\"SignIn With Google\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={\"single_host_origin\"}\n                  />\n                  <FacebookLogin\n                    appId=\"322522312399138\"\n                    autoLoad={false}\n                    callback={responseFacebook}\n                  />\n                  ,\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n\n      <Modal\n        show={signUpScreen}\n        onHide={closeSignUp}\n        size=\"lg\"\n        centered\n        aria-labelledby=\"contained-modal-title-vcenter\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"card-body card-block\">\n            <Formik\n              initialValues={initialValuesRegister}\n              onSubmit={async (values) => {\n                try {\n                  values.role = \"USER\";\n                  values.displayName = values.name;\n                  const result = await register(values);\n                  if (result.status === 200) {\n                    setSigUpScreen(false);\n                    return Alert.success(\n                      `<div role=\"alert\">\n                                                 ${result.data.message}\n                                                </div>`,\n                      {\n                        html: true,\n                        position: \"top-right\",\n                        effect: \"slide\",\n                      }\n                    );\n                  }\n                } catch (error) {\n                  console.log(error);\n\n                  return Alert.error(\n                    `<div role=\"alert\">\n                                                ${error.response.data.message}\n                                                </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                }\n              }}\n              validationSchema={validationSchemaRegister}\n            >\n              {(props) => (\n                <Form\n                  className=\"form-horizontal ml-5\"\n                  onSubmit={props.handleSubmit}\n                >\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Email\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"email\"\n                          className=\"ml-5\"\n                          style={{ width: \"60%\" }}\n                          placeholder=\"Enter your email\"\n                          onChange={(event) => {\n                            initialValuesRegister.email = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.email && props.errors.email}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.email && props.errors.email}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Name\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"name\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"ml-5\"\n                          style={{ width: \"60%\" }}\n                          placeholder=\"Enter your name\"\n                          onChange={(event) => {\n                            initialValuesRegister.name = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.name && props.errors.name}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.name && props.errors.name}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={1.7}>\n                        Password\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          className=\"ml-3\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter your password\"\n                          onChange={(event) => {\n                            initialValuesRegister.password = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={\n                            props.touched.password && props.errors.password\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.password && props.errors.password}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Confirm Password\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={3}\n                          type=\"password\"\n                          id=\"c_password\"\n                          name=\"c_password\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter confirm password\"\n                          onChange={(event) => {\n                            initialValuesRegister.c_password =\n                              event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={\n                            props.touched.c_password && props.errors.c_password\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.c_password && props.errors.c_password}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Day Of Birth\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={3}\n                          type=\"Date\"\n                          id=\"dob\"\n                          name=\"dob\"\n                          className=\"ml-3\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter your day of birth\"\n                          onChange={(event) => {\n                            initialValuesRegister.dob = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.dob && props.errors.dob}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.dob && props.errors.dob}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>Avatar</Form.Label>\n                    <Form.File\n                      id=\"photoUrl\"\n                      name=\"photoUrl\"\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(e) => {\n                        uploadMyAvatar(e.target.files[0]);\n                      }}\n                    />\n                    <CardGroup className=\"mt-3\">\n                      {/* {images.map((item) => (\n                        <Card style={{ width: \"18rem\" }} className=\"mb-3 ml-3\">\n                          <i\n                            className=\"fa fa-times-circle\"\n                            aria-hidden=\"true\"\n                            style={{ float: \"right\" }}\n                          ></i>\n                          <Card.Img\n                            variant=\"top\"\n                            src={item}\n                            style={{ width: \"100%\", height: \"100%\" }}\n                          />\n                        </Card>\n                      ))} */}\n                    </CardGroup>\n                  </Form.Group>\n                  <Modal.Footer>\n                    <Button variant=\"success\" type=\"submit\">\n                      Sign Up\n                      <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </Modal.Footer>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js",["110"],"import React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBookDetails } from \"../../api/index\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { Form, Modal } from \"react-bootstrap\";\nimport \"react-tabs/style/react-tabs.css\";\nimport * as yup from \"yup\";\nimport { createReview, getReview } from \"../../api/index\";\nimport { NavLink } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nconst validationSchema = yup.object().shape({\n  content: yup.string().required(\"Please enter your review\"),\n});\nconst orderValidationSchema = yup.object().shape({\n  totalDate: yup.number().min(1).required(),\n});\nexport const BookDetails = (prop) => {\n  const dispatch = useDispatch();\n  const orderInitialValues = {\n    totalDate: 0,\n  };\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const [showWriteReview, setWriteReview] = useState(false);\n  const [reviews, setReview] = useState([]);\n  const initialValues = {\n    content: \"\",\n  };\n  const [reviewPage, setReviewPage] = useState({\n    page: 1,\n    limit: 5,\n  });\n  const bookId = prop.match.params.book_id;\n  const [bookDetail, setBookDetail] = useState({});\n  const [publisher, setPublisher] = useState({});\n  const getBook = async (bookId) => {\n    const book = await getBookDetails(bookId);\n    setBookDetail(book.data.data);\n    setPublisher(book.data.data.publisher);\n  };\n  useEffect(() => {\n    getBook(bookId);\n  }, [bookId, reviews]);\n  const getReviews = async () => {\n    const paramsString = queryString.stringify(reviewPage);\n    const result = await getReview(bookId, paramsString);\n    setReview(result.data.data);\n    dispatch({ type: \"BOOK_REVIEWS\", payload: result.data.data });\n  };\n  useEffect(() => {\n    getReviews();\n  }, [showWriteReview, reviewPage]);\n  return (\n    <div id=\"MainContent\" className=\"main-content\" role=\"main\">\n      <Alert stack={{ limit: 3 }} />\n      <div className=\"bredcrumbWrap\">\n        <div className=\"container breadcrumbs\">\n          <NavLink to=\"/library\">Books</NavLink>\n          <span aria-hidden=\"true\">›</span>\n          <span>{bookDetail.book_name}</span>\n        </div>\n      </div>\n      {/*End Breadcrumb*/}\n      <div\n        id=\"ProductSection-product-template\"\n        className=\"product-template__container prstyle2 container\"\n      >\n        {/*#ProductSection-product-template*/}\n        <div className=\"product-single product-single-1\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6 col-sm-12 col-12\">\n              <div className=\"product-details-img product-single__photos bottom\">\n                <div className=\"zoompro-wrap product-zoom-right pl-20\">\n                  <div className=\"zoompro-span\">\n                    <img\n                      className=\"blur-up lazyload zoompro\"\n                      alt=\"\"\n                      src={bookDetail.images ? bookDetail.images : null}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-12 col-12\">\n              <div className=\"product-single__meta\">\n                <h1 className=\"product-single__title\">\n                  {bookDetail.book_name}\n                </h1>\n                <div className=\"prInfoRow\">\n                  <div className=\"product-stock\">\n                    Author:\n                    {bookDetail.authors\n                      ? bookDetail.authors.map((item) => (\n                          <span\n                            style={{ marginLeft: 3 }}\n                            className=\"instock\"\n                            key={item._id}\n                          >\n                            {item.authorName}\n                          </span>\n                        ))\n                      : null}\n                  </div>\n                  <div className=\"product-sku\">\n                    Publisher:{\" \"}\n                    <span className=\"variant-sku\">\n                      {publisher.publisherName}\n                    </span>\n                  </div>\n                </div>\n                <p className=\"product-single__price product-single__price-product-template\">\n                  <span className=\"visually-hidden\">Regular price</span>\n                  <span className=\"product-price__price product-price__price-product-template product-price__sale product-price__sale--single\">\n                    <span id=\"ProductPrice-product-template\">\n                      <span className=\"money\">\n                        {bookDetail.price} eCoins/day\n                      </span>\n                    </span>\n                  </span>\n                </p>\n                {/* Product Action */}\n                <div className=\"product-action clearfix\">\n                  <Formik\n                    initialValues={orderInitialValues}\n                    validationSchema={orderValidationSchema}\n                  >\n                    {(props) => (\n                      <Form>\n                        <div style={{ marginBottom: 5 }}>\n                          <span>Day number</span>\n                          <input\n                            type=\"number\"\n                            name=\"totalDate\"\n                            onChange={props.handleChange}\n                          />\n                        </div>\n                        <div className=\"product-form__item--submit\">\n                          <button\n                            type=\"submit\"\n                            name=\"add\"\n                            className=\"btn product-form__cart-submit\"\n                          >\n                            <span>Add to cart</span>\n                          </button>\n                        </div>\n                      </Form>\n                    )}\n                  </Formik>\n                </div>\n                {/* End Product Action */}\n                <div className=\"display-table shareRow\">\n                  <div className=\"display-table-cell medium-up--one-third\">\n                    <div className=\"wishlist-btn\">\n                      <button\n                        className=\"wishlist add-to-wishlist\"\n                        title=\"Add to Wishlist\"\n                      >\n                        <i\n                          className=\"icon anm anm-heart-l\"\n                          aria-hidden=\"true\"\n                        />\n                        <span>Add to Wishlist</span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/*Product Tabs*/}\n            </div>\n          </div>\n          <div className=\"container\" style={{ marginTop: 10 }}>\n            <Tabs>\n              <TabList>\n                <Tab>Description</Tab>\n                <Tab\n                  onClick={() => {\n                    getReviews();\n                  }}\n                >\n                  Review\n                </Tab>\n              </TabList>\n\n              <TabPanel>\n                <p>{bookDetail.description}</p>\n              </TabPanel>\n              <TabPanel>\n                <Modal\n                  show={showWriteReview}\n                  size=\"lg\"\n                  aria-labelledby=\"contained-modal-title-vcenter\"\n                  centered\n                  onHide={() => {\n                    setWriteReview(false);\n                  }}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                      My Review\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Formik\n                      initialValues={initialValues}\n                      onSubmit={async (values) => {\n                        try {\n                          values.user = user._id;\n                          values.bookId = bookId;\n                          await createReview(values);\n                          setWriteReview(false);\n                          return Alert.success(\n                            `<div role=\"alert\">\n                                      Write review successfully\n                                      </div>`,\n                            {\n                              html: true,\n                              position: \"top-right\",\n                              effect: \"slide\",\n                            }\n                          );\n                        } catch (error) {\n                          return Alert.error(\n                            `<div role=\"alert\">\n                                  ${error.response.data.message}</div>`,\n                            {\n                              html: true,\n                              position: \"top-right\",\n                              effect: \"slide\",\n                            }\n                          );\n                        }\n                      }}\n                      validationSchema={validationSchema}\n                    >\n                      {(props) => (\n                        <Form\n                          onSubmit={props.handleSubmit}\n                          id=\"new-review-form\"\n                          className=\"new-review-form\"\n                        >\n                          <h3 className=\"spr-form-title\">Write a review</h3>\n                          <fieldset className=\"spr-form-review\">\n                            <div className=\"spr-form-review-body\">\n                              <label className=\"spr-form-label\">Content</label>\n                              <div className=\"spr-form-input\">\n                                <Form.Control\n                                  className=\"spr-form-input spr-form-input-textarea \"\n                                  name=\"content\"\n                                  as=\"textarea\"\n                                  rows={10}\n                                  placeholder=\"Write your review here\"\n                                  onChange={props.handleChange}\n                                  onBlur={props.handleBlur}\n                                  isInvalid={\n                                    props.touched.content &&\n                                    props.errors.content\n                                  }\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                  {props.touched.content &&\n                                    props.errors.content}\n                                </Form.Control.Feedback>\n                              </div>\n                            </div>\n                          </fieldset>\n                          <fieldset className=\"spr-form-actions\">\n                            <input\n                              type=\"submit\"\n                              className=\"spr-button spr-button-primary button button-primary btn btn-primary\"\n                              defaultValue=\"Submit Review\"\n                            />\n                          </fieldset>\n                        </Form>\n                      )}\n                    </Formik>\n                  </Modal.Body>\n                </Modal>\n                <div id=\"shopify-product-reviews\">\n                  <div className=\"spr-container\">\n                    <div className=\"spr-content\">\n                      {user._id ? (\n                        <div className=\"spr-form clearfix\">\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={() => {\n                              setWriteReview(true);\n                            }}\n                          >\n                            Write Review\n                          </button>\n                        </div>\n                      ) : null}\n\n                      <div className=\"spr-reviews\">\n                        {reviews.map((review) => (\n                          <div className=\"spr-review\" key={review._id}>\n                            <div className=\"spr-review-header\">\n                              <h3 className=\"spr-review-header-title\">\n                                <img\n                                  src={review.user.photoUrl}\n                                  alt=\"\"\n                                  className=\"border rounded-circle\"\n                                  style={{ width: 35, marginRight: 3 }}\n                                />\n                                {review.user.displayName}\n                              </h3>\n                              <span className=\"spr-review-header-byline\">\n                                <strong>\n                                  {moment(review.createdAt).format(\n                                    \"DD.MM.YYYY HH:mm\"\n                                  )}\n                                </strong>\n                              </span>\n                            </div>\n                            <div className=\"spr-review-content\">\n                              <p className=\"spr-review-content-body\">\n                                {review.content}\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                        <button\n                          className=\"btn btn-dark\"\n                          onClick={() => {\n                            setReviewPage({\n                              ...reviewPage,\n                              limit: reviewPage.limit + 5,\n                            });\n                          }}\n                        >\n                          Load More\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </TabPanel>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js",["111","112","113","114","115","116","117","118","119"],"import React from \"react\";\nexport const FavoriteBook = () => {\n  return (\n    <div>\n      <div className=\"page section-header text-center\">\n        <div className=\"page-title\">\n          <div className=\"wrapper\">\n            <h1 className=\"page-width\">Wish List</h1>\n          </div>\n        </div>\n      </div>\n      {/*End Page Title*/}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 main-col\">\n            <form action=\"#\">\n              <div className=\"wishlist-table table-content table-responsive\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th className=\"product-name text-center alt-font\">\n                        Remove\n                      </th>\n                      <th className=\"product-price text-center alt-font\">\n                        Images\n                      </th>\n                      <th className=\"product-name alt-font\">Product</th>\n                      <th className=\"product-price text-center alt-font\">\n                        Unit Price\n                      </th>\n                      <th className=\"stock-status text-center alt-font\">\n                        Stock Status\n                      </th>\n                      <th className=\"product-subtotal text-center alt-font\">\n                        Add to Cart\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td\n                        className=\"product-remove text-center\"\n                        valign=\"middle\"\n                      >\n                        <a href=\"#\">\n                          <i className=\"icon icon anm anm-times-l\" />\n                        </a>\n                      </td>\n                      <td className=\"product-thumbnail text-center\">\n                        <a href=\"#\">\n                          <img\n                            src=\"assets/images/product-images/product-image8.jpg\"\n                            alt=\"\"\n                            title\n                          />\n                        </a>\n                      </td>\n                      <td className=\"product-name\">\n                        <h4 className=\"no-margin\">\n                          <a href=\"#\">Minerva Dress black</a>\n                        </h4>\n                      </td>\n                      <td className=\"product-price text-center\">\n                        <span className=\"amount\">$165.00</span>\n                      </td>\n                      <td className=\"stock text-center\">\n                        <span className=\"in-stock\">in stock</span>\n                      </td>\n                      <td className=\"product-subtotal text-center\">\n                        <button type=\"button\" className=\"btn btn-small\">\n                          Add To Cart\n                        </button>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td\n                        className=\"product-remove text-center\"\n                        valign=\"middle\"\n                      >\n                        <a href=\"#\">\n                          <i className=\"icon icon anm anm-times-l\" />\n                        </a>\n                      </td>\n                      <td className=\"product-thumbnail text-center\">\n                        <a href=\"#\">\n                          <img\n                            src=\"assets/images/product-images/product-image4.jpg\"\n                            alt=\"\"\n                            title\n                          />\n                        </a>\n                      </td>\n                      <td className=\"product-name\">\n                        <h4 className=\"no-margin\">\n                          <a href=\"#\">Sueded Cotton Pant in Khaki</a>\n                        </h4>\n                      </td>\n                      <td className=\"product-price text-center\">\n                        <span className=\"amount\">$150.00</span>\n                      </td>\n                      <td className=\"stock text-center\">\n                        <span className=\"out-stock\">Out Of stock</span>\n                      </td>\n                      <td className=\"product-subtotal text-center\">\n                        <button type=\"button\" className=\"btn btn-small\">\n                          Add To Cart\n                        </button>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td\n                        className=\"product-remove text-center\"\n                        valign=\"middle\"\n                      >\n                        <a href=\"#\">\n                          <i className=\"icon icon anm anm-times-l\" />\n                        </a>\n                      </td>\n                      <td className=\"product-thumbnail text-center\">\n                        <a href=\"#\">\n                          <img\n                            src=\"assets/images/product-images/product-image5.jpg\"\n                            alt=\"\"\n                            title\n                          />\n                        </a>\n                      </td>\n                      <td className=\"product-name\">\n                        <h4 className=\"no-margin\">\n                          <a href=\"#\">Woven Solid Midi Shirt Dress</a>\n                        </h4>\n                      </td>\n                      <td className=\"product-price text-center\">\n                        <span className=\"amount\">$150.00</span>\n                      </td>\n                      <td className=\"stock text-center\">\n                        <span className=\"in-stock\">in stock</span>\n                      </td>\n                      <td className=\"product-subtotal text-center\">\n                        <button type=\"button\" className=\"btn btn-small\">\n                          Add To Cart\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":30,"column":6,"nodeType":"126","endLine":30,"endColumn":24,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":48,"column":13,"nodeType":"130","endLine":52,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":227,"column":23,"nodeType":"130","endLine":227,"endColumn":63},{"ruleId":"131","severity":1,"message":"132","line":235,"column":23,"nodeType":"130","endLine":235,"endColumn":63},{"ruleId":"131","severity":1,"message":"133","line":256,"column":17,"nodeType":"130","endLine":256,"endColumn":72},{"ruleId":"131","severity":1,"message":"133","line":270,"column":23,"nodeType":"130","endLine":270,"endColumn":61},{"ruleId":"131","severity":1,"message":"133","line":278,"column":25,"nodeType":"130","endLine":278,"endColumn":56},{"ruleId":"131","severity":1,"message":"133","line":281,"column":25,"nodeType":"130","endLine":281,"endColumn":63},{"ruleId":"131","severity":1,"message":"133","line":291,"column":29,"nodeType":"130","endLine":294,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":293,"column":36,"nodeType":"136","messageId":"137","endLine":293,"endColumn":57},{"ruleId":"131","severity":1,"message":"133","line":307,"column":29,"nodeType":"130","endLine":310,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":309,"column":36,"nodeType":"136","messageId":"137","endLine":309,"endColumn":57},{"ruleId":"131","severity":1,"message":"133","line":326,"column":23,"nodeType":"130","endLine":326,"endColumn":61},{"ruleId":"131","severity":1,"message":"133","line":334,"column":25,"nodeType":"130","endLine":334,"endColumn":56},{"ruleId":"131","severity":1,"message":"133","line":337,"column":25,"nodeType":"130","endLine":337,"endColumn":63},{"ruleId":"131","severity":1,"message":"133","line":347,"column":29,"nodeType":"130","endLine":350,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":349,"column":36,"nodeType":"136","messageId":"137","endLine":349,"endColumn":57},{"ruleId":"131","severity":1,"message":"133","line":363,"column":29,"nodeType":"130","endLine":366,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":365,"column":36,"nodeType":"136","messageId":"137","endLine":365,"endColumn":57},{"ruleId":"131","severity":1,"message":"132","line":455,"column":15,"nodeType":"130","endLine":455,"endColumn":55},{"ruleId":"131","severity":1,"message":"132","line":460,"column":15,"nodeType":"130","endLine":460,"endColumn":55},{"ruleId":"124","severity":1,"message":"138","line":58,"column":6,"nodeType":"126","endLine":58,"endColumn":35,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"133","line":45,"column":25,"nodeType":"130","endLine":45,"endColumn":37},{"ruleId":"131","severity":1,"message":"133","line":50,"column":25,"nodeType":"130","endLine":50,"endColumn":37},{"ruleId":"131","severity":1,"message":"133","line":60,"column":27,"nodeType":"130","endLine":60,"endColumn":39},{"ruleId":"131","severity":1,"message":"133","line":80,"column":25,"nodeType":"130","endLine":80,"endColumn":37},{"ruleId":"131","severity":1,"message":"133","line":85,"column":25,"nodeType":"130","endLine":85,"endColumn":37},{"ruleId":"131","severity":1,"message":"133","line":95,"column":27,"nodeType":"130","endLine":95,"endColumn":39},{"ruleId":"131","severity":1,"message":"133","line":115,"column":25,"nodeType":"130","endLine":115,"endColumn":37},{"ruleId":"131","severity":1,"message":"133","line":120,"column":25,"nodeType":"130","endLine":120,"endColumn":37},{"ruleId":"131","severity":1,"message":"133","line":130,"column":27,"nodeType":"130","endLine":130,"endColumn":39},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [getData, props.pagination]",{"range":"148","text":"149"},"Update the dependencies array to be: [showWriteReview, reviewPage, getReviews]",{"range":"150","text":"151"},[1039,1057],"[getData, props.pagination]",[2014,2043],"[showWriteReview, reviewPage, getReviews]"]