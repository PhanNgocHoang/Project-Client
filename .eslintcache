[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/pages/Library.js":"7","/Users/phanhoang/Documents/Project/client/src/api/index.js":"8","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"9","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"10","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"11","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"12","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"13","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"14","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"15","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"16","/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js":"17","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js":"18","/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js":"19","/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js":"20","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js":"21","/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js":"22"},{"size":754,"mtime":1612274438131,"results":"23","hashOfConfig":"24"},{"size":525,"mtime":1614580273993,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1612166816275,"results":"26","hashOfConfig":"24"},{"size":1276,"mtime":1614176977133,"results":"27","hashOfConfig":"24"},{"size":564,"mtime":1614398308577,"results":"28","hashOfConfig":"24"},{"size":5004,"mtime":1614614387162,"results":"29","hashOfConfig":"24"},{"size":10496,"mtime":1614581959541,"results":"30","hashOfConfig":"24"},{"size":2777,"mtime":1614612117518,"results":"31","hashOfConfig":"24"},{"size":31399,"mtime":1614606797954,"results":"32","hashOfConfig":"24"},{"size":2809,"mtime":1614219045988,"results":"33","hashOfConfig":"24"},{"size":2706,"mtime":1614582080166,"results":"34","hashOfConfig":"24"},{"size":308,"mtime":1614580633314,"results":"35","hashOfConfig":"24"},{"size":312,"mtime":1614580603605,"results":"36","hashOfConfig":"24"},{"size":220,"mtime":1614580415076,"results":"37","hashOfConfig":"24"},{"size":771,"mtime":1614483006566,"results":"38","hashOfConfig":"24"},{"size":309,"mtime":1613364752389,"results":"39","hashOfConfig":"24"},{"size":18599,"mtime":1614613011212,"results":"40","hashOfConfig":"24"},{"size":1281,"mtime":1614582271430,"results":"41","hashOfConfig":"24"},{"size":312,"mtime":1614217545655,"results":"42","hashOfConfig":"24"},{"size":4889,"mtime":1614486844914,"results":"43","hashOfConfig":"24"},{"size":2672,"mtime":1614519927783,"results":"44","hashOfConfig":"24"},{"size":326,"mtime":1614580726820,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1qfk95l",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["94","95"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",["96","97"],"/Users/phanhoang/Documents/Project/client/src/pages/Library.js",["98"],"import React, { useState, useEffect } from \"react\";\nimport { Books } from \"../component/book/listBook\";\nimport { getAllBookTypes, getAllAuthor, getAllPublisher } from \"../api/index\";\nimport { Form } from \"react-bootstrap\";\n\nexport const Library = () => {\n  let filter = {\n    publisher: [],\n    bookType: [],\n    authors: [],\n  };\n  const [bookTypes, setBookTypes] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  const [publishers, setPublishers] = useState([]);\n  const getBookTypes = async () => {\n    const result = await getAllBookTypes();\n    setBookTypes(result.data.data);\n  };\n  const getAuthors = async () => {\n    const result = await getAllAuthor();\n    setAuthors(result.data.data);\n  };\n  const getPublisher = async () => {\n    const result = await getAllPublisher();\n    setPublishers(result.data.data);\n  };\n  useEffect(() => {\n    getBookTypes();\n    getAuthors();\n    getPublisher();\n  }, []);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 12,\n    searchKey: \"\",\n    publisher: [],\n    bookType: [],\n    authors: [],\n  });\n  const loadMore = () => {\n    setPagination({ ...pagination, limit: pagination.limit + 4 });\n  };\n  return (\n    <div>\n      <div className=\"collection-header\">\n        <div className=\"collection-hero\">\n          <div className=\"collection-hero__image\">\n            <img\n              className=\"blur-up lazyload\"\n              data-src=\"https://eknathmadhavicollege.in/wp-content/uploads/2020/07/library-shelves-banner-photo.jpg\"\n              src=\"https://eknathmadhavicollege.in/wp-content/uploads/2020/07/library-shelves-banner-photo.jpg\"\n            />\n          </div>\n          <div className=\"collection-hero__title-wrapper\"></div>\n        </div>\n      </div>\n\n      <div className=\"container\" style={{ marginTop: 20 }}>\n        <div className=\"row\">\n          {/*Sidebar*/}\n          <div className=\"col-12 col-sm-12 col-md-3 col-lg-3 sidebar filterbar\">\n            <div className=\"closeFilter d-block d-md-none d-lg-none\">\n              <i className=\"icon icon anm anm-times-l\" />\n            </div>\n            <div className=\"sidebar_tags\">\n              <div className=\"sidebar_widget filterBox filter-widget\">\n                <Form>\n                  <div className=\"widget-title\">\n                    <h2>Book Types</h2>\n                  </div>\n                  <ul>\n                    {bookTypes.map((item) => (\n                      <li key={item._id}>\n                        <input\n                          type=\"checkbox\"\n                          defaultValue=\"allen-vela\"\n                          value={item._id}\n                          onChange={(e) => {\n                            const value = e.target.checked ? item._id : null;\n                            if (value === null) {\n                              const bookType = filter.bookType;\n                              bookType.filter((item) => item !== item._id);\n                              setPagination({\n                                ...pagination,\n                                bookType: filter.bookType,\n                              });\n                            } else {\n                              filter.bookType.push(value);\n\n                              setPagination({\n                                ...pagination,\n                                bookType: filter.bookType,\n                              });\n                            }\n                          }}\n                        />\n                        <label>\n                          <span>\n                            <span />\n                          </span>\n                          {item.type_name}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </Form>\n              </div>\n\n              <div className=\"sidebar_widget filterBox filter-widget\">\n                <div className=\"widget-title\">\n                  <h2>Authors</h2>\n                </div>\n                <ul>\n                  {authors.map((item) => (\n                    <li key={item._id}>\n                      <input\n                        type=\"checkbox\"\n                        defaultValue=\"allen-vela\"\n                        value={item._id}\n                        onChange={(e) => {\n                          const value = e.target.checked ? item._id : null;\n                          if (value === null) {\n                            const bookType = filter.authors;\n                            bookType.filter((item) => item !== item._id);\n                            setPagination({\n                              ...pagination,\n                              authors: filter.authors,\n                            });\n                          } else {\n                            filter.authors.push(value);\n\n                            setPagination({\n                              ...pagination,\n                              authors: filter.authors,\n                            });\n                          }\n                        }}\n                      />\n                      <label>\n                        <span>\n                          <span />\n                        </span>\n                        {item.authorName}\n                      </label>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"sidebar_widget filterBox filter-widget\">\n                <div className=\"widget-title\">\n                  <h2>Publishers</h2>\n                </div>\n                <ul>\n                  {publishers.map((item) => (\n                    <li key={item._id}>\n                      <input\n                        type=\"checkbox\"\n                        defaultValue=\"allen-vela\"\n                        value={item._id}\n                        onChange={(e) => {\n                          const value = e.target.checked ? item._id : null;\n                          if (value === null) {\n                            const bookType = filter.publisher;\n                            bookType.filter((item) => item !== item._id);\n                            setPagination({\n                              ...pagination,\n                              publisher: filter.publisher,\n                            });\n                          } else {\n                            filter.publisher.push(value);\n\n                            setPagination({\n                              ...pagination,\n                              publisher: filter.publisher,\n                            });\n                          }\n                        }}\n                      />\n                      <label>\n                        <span>\n                          <span />\n                        </span>\n                        {item.publisherName}\n                      </label>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 col-sm-12 col-md-9 col-lg-9 main-col\">\n            <div className=\"category-description\">\n              <h3>Category Description</h3>\n              <p>\n                Reading books benefits both your physical and mental health, and\n                those benefits can last a lifetime. They begin in early\n                childhood and continue through the senior years. Here’s a brief\n                explanation of how reading books can change your brain — and\n                your body — for the better.\n              </p>\n            </div>\n            <hr />\n            <div className=\"productList product-load-more\">\n              {/*Toolbar*/}\n              <button\n                type=\"button\"\n                className=\"btn btn-filter d-block d-md-none d-lg-none\"\n              >\n                {\" \"}\n                Product Filters\n              </button>\n              <div className=\"toolbar\">\n                <div className=\"filters-toolbar-wrapper\">\n                  <div className=\"row\">\n                    <div className=\"col-2 col-md-2 col-lg-2 text-center filters-toolbar__item filters-toolbar__item--count d-flex justify-content-center align-items-center\">\n                      <span className=\"filters-toolbar__product-count\">\n                        Showing: 22\n                      </span>\n                    </div>\n                    <div className=\"col-10 col-md-10 col-lg-10 text-right\">\n                      <div className=\"filters-toolbar__item\">\n                        <label htmlFor=\"SortBy\" className=\"hidden\">\n                          Sort\n                        </label>\n                        <select\n                          name=\"SortBy\"\n                          id=\"SortBy\"\n                          className=\"filters-toolbar__input filters-toolbar__input--sort\"\n                        >\n                          <option value=\"title-ascending\" selected=\"selected\">\n                            Sort\n                          </option>\n                          <option>Best Selling</option>\n                          <option>Alphabetically, A-Z</option>\n                          <option>Alphabetically, Z-A</option>\n                          <option>Price, low to high</option>\n                          <option>Price, high to low</option>\n                          <option>Date, new to old</option>\n                          <option>Date, old to new</option>\n                        </select>\n                        <input\n                          className=\"collection-header__default-sort\"\n                          type=\"hidden\"\n                          defaultValue=\"manual\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-products grid--view-items\">\n              <Books\n                position=\"col-6 col-sm-6 col-md-4 col-lg-3 item\"\n                pagination={pagination}\n              />\n            </div>\n            <div className=\"infinitpaginOuter\">\n              <div className=\"infinitpagin\">\n                <button\n                  onClick={() => {\n                    loadMore();\n                  }}\n                  className=\"btn loadMore\"\n                >\n                  Load More\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",["99","100","101","102"],"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Modal,\n  Button,\n  Form,\n  Col,\n  CardGroup,\n  OverlayTrigger,\n  Popover,\n  ListGroup,\n  Image,\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport FacebookLogin from \"react-facebook-login\";\nimport GoogleLogin from \"react-google-login\";\nimport {\n  checkLogin,\n  uploadAvatar,\n  register,\n  loginWithGoogle,\n  loginWithFacebook,\n  addCoins,\n} from \"../../api/index.js\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport PayPal from \"../../utils/paypal\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n});\nconst validationSchemaRegister = yup.object().shape({\n  email: yup.string().email(\"Email invalid\").required(\"Email is required\"),\n  name: yup.string().required(\"Name is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password is less than 6 characters\")\n    .required(\"Password is required\"),\n  c_password: yup\n    .string()\n    .min(6, \"Confirm Password is less than 6 characters\")\n    .required(\"Confirm Password is required\")\n    .oneOf([yup.ref(\"password\")], \"Confirm password not match with password\"),\n  dob: yup.date().required(\"Day of birth is required\"),\n  photoUrl: yup.string().required(\"Please choose a avatar\"),\n});\nconst validationMoneySchema = yup.object().shape({\n  money: yup\n    .number()\n    .min(1, \"Minimum amount is 1 dollar\")\n    .required(\"Please enter a number money\"),\n});\nexport const Header = () => {\n  useAuth();\n  const [formAddCoins, setFormAddCoins] = useState(false);\n  const dispatch = useDispatch();\n  const initialMoney = {\n    money: 0,\n  };\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const initialValuesRegister = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    // c_password: \"\",\n    dob: \"\",\n    photoUrl: \"\",\n  };\n  const [numberMoney, setNumberMoney] = useState(0);\n  const signInScreenStatus = useSelector((state) => {\n    return state.formLoginStatus;\n  });\n  const [signUpScreen, setSigUpScreen] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(false);\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const closeSignIn = () => {\n    dispatch({ type: \"FORM_LOGIN_STATUS\", payload: false });\n  };\n\n  const closeSignUp = async function () {\n    setSigUpScreen(false);\n  };\n  const uploadMyAvatar = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const result = await uploadAvatar(formData);\n    initialValuesRegister.photoUrl = result.data.url;\n  };\n  const logOut = async () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"_id\");\n    window.location.href = \"/\";\n  };\n  const responseGoogle = async (response) => {\n    try {\n      const result = await loginWithGoogle({\n        access_token: response.accessToken,\n      });\n      if (result.status === 200) {\n        closeSignIn();\n        localStorage.setItem(\"token\", result.data.token);\n        dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n        localStorage.setItem(\"_id\", result.data.user._id);\n        return Alert.success(`<div role=\"alert\"> Sign In Successfully </div>`, {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        });\n      }\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const responseFacebook = async (response) => {\n    try {\n      const result = await loginWithFacebook({\n        access_token: response.accessToken,\n        user_id: response.id,\n      });\n      if (result.status === 200) {\n        localStorage.setItem(\"token\", result.data.token);\n        localStorage.setItem(\"_id\", result.data.user._id);\n        dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n        Alert.success(`<div role=\"alert\"> Sign In Successfully </div>`, {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        });\n        return (window.location.href = \"/\");\n      }\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const transactionSuccess = async (data) => {\n    try {\n      const response = await addCoins({\n        paymentId: data.paymentID,\n        userId: user._id,\n      });\n      setPaymentMethod(false);\n      return Alert.success(\n        `<div role=\"alert\"> ${response.data.message} </div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const transactionError = (err) => {\n    return Alert.error(`<div role=\"alert\">${err.message}</div>`, {\n      html: true,\n      position: \"top-right\",\n      effect: \"slide\",\n    });\n  };\n  const transactionCanceled = () => {\n    return Alert.success(\n      `<div role=\"alert\">Transaction called successfully</div>`,\n      {\n        html: true,\n        position: \"top-right\",\n        effect: \"slide\",\n      }\n    );\n  };\n  return (\n    <div>\n      <Alert stack={{ limit: 3 }} />\n      {/* Header Area Start */}\n      <div className=\"header-wrap animated d-flex border-bottom\">\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            {/*Desktop Logo*/}\n            <div className=\"logo col-md-2 col-lg-2 d-none d-lg-block\">\n              <NavLink to=\"/\">\n                <Image\n                  src=\"https://res.cloudinary.com/dps6fac1c/image/upload/v1613621648/images/e-library_uxmixc.png\"\n                  style={{ width: \"30%\", height: \"30%\" }}\n                />\n              </NavLink>\n            </div>\n            {/*End Desktop Logo*/}\n            <div className=\"col-2 col-sm-2 col-md-3 col-lg-7\">\n              <div className=\"d-block d-lg-none\">\n                <button\n                  type=\"button\"\n                  className=\"btn--link site-header__menu js-mobile-nav-toggle mobile-nav--open\"\n                >\n                  <i className=\"icon anm anm-times-l\" />\n                  <i className=\"anm anm-bars-r\" />\n                </button>\n              </div>\n              {/*Desktop Menu*/}\n              <nav className=\"grid__item\" id=\"AccessibleNav\">\n                {/* for mobile */}\n                <ul id=\"siteNav\" className=\"site-nav medium center hidearrow\">\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/\">Home</NavLink>\n                  </li>\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/library\">Library</NavLink>\n                  </li>\n                  <li className=\"lvl1 parent megamenu\">\n                    <NavLink to=\"/favorite\">Favorite</NavLink>\n                  </li>\n                  {user.email ? (\n                    <li>\n                      <OverlayTrigger\n                        placement=\"bottom\"\n                        trigger=\"click\"\n                        overlay={\n                          <Popover>\n                            <Popover.Title as=\"h3\">\n                              {user.displayName}\n                            </Popover.Title>\n                            <Popover.Content>\n                              <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                  <NavLink to=\"/me\">Update Profile</NavLink>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                  <NavLink to=\"/me\">Update Profile</NavLink>\n                                </ListGroup.Item>\n                                <ListGroup.Item\n                                  style={{ cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    setFormAddCoins(true);\n                                  }}\n                                >\n                                  Add eCoins\n                                </ListGroup.Item>\n                                <ListGroup.Item\n                                  onClick={() => {\n                                    logOut();\n                                  }}\n                                  style={{ cursor: \"pointer\" }}\n                                >\n                                  LogOut\n                                </ListGroup.Item>\n                              </ListGroup>\n                            </Popover.Content>\n                          </Popover>\n                        }\n                      >\n                        <div>\n                          <img\n                            src={user.photoUrl}\n                            alt=\"\"\n                            className=\"border rounded-circle\"\n                            style={{\n                              width: 35,\n                              marginLeft: \"3%\",\n                              cursor: \"pointer\",\n                            }}\n                          />\n                        </div>\n                      </OverlayTrigger>\n                    </li>\n                  ) : (\n                    <li\n                      className=\"lvl1 parent megamenu\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <a\n                        onClick={() => {\n                          dispatch({\n                            type: \"FORM_LOGIN_STATUS\",\n                            payload: true,\n                          });\n                        }}\n                      >\n                        Sign In\n                      </a>\n                    </li>\n                  )}\n                  {user.email ? null : (\n                    <li\n                      className=\"lvl1 parent megamenu\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <a onClick={() => setSigUpScreen(true)}>Sign Up</a>\n                    </li>\n                  )}\n                </ul>\n              </nav>\n              {/*End Desktop Menu*/}\n            </div>\n            {/*Mobile Logo*/}\n            <div className=\"col-6 col-sm-6 col-md-5 col-lg-1 d-block d-lg-none mobile-logo\">\n              <div className=\"logo\">\n                <a href=\"index.html\">\n                  <Image\n                    src=\"https://res.cloudinary.com/dps6fac1c/image/upload/v1613621648/images/e-library_uxmixc.png\"\n                    style={{ width: \"50%\", height: \"50%\" }}\n                  />\n                </a>\n              </div>\n            </div>\n            {/*Mobile Logo*/}\n            <div className=\"col-4 col-sm-4 col-md-4 col-lg-3\">\n              <div className=\"site-header__search\">\n                <button type=\"button\" className=\"search-trigger\">\n                  <i className=\"icon anm anm-search-l\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mobile-nav-wrapper\" role=\"navigation\">\n        <div className=\"closemobileMenu\">\n          <i className=\"icon anm anm-times-l pull-right\" /> Close Menu\n        </div>\n        <ul id=\"MobileNav\" className=\"mobile-nav\">\n          {user.email ? (\n            <li>\n              <OverlayTrigger\n                placement=\"auto\"\n                trigger=\"click\"\n                overlay={\n                  <Popover>\n                    <Popover.Title as=\"h3\">{user.displayName}</Popover.Title>\n                    <Popover.Content>\n                      <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                          <NavLink to=\"/me\">Update Profile</NavLink>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <NavLink to=\"/me\">Update Profile</NavLink>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <ListGroup.Item style={{ cursor: \"pointer\" }}>\n                            Add eCoins\n                          </ListGroup.Item>\n                        </ListGroup.Item>\n                        <ListGroup.Item\n                          onClick={() => {\n                            logOut();\n                          }}\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          LogOut\n                        </ListGroup.Item>\n                      </ListGroup>\n                    </Popover.Content>\n                  </Popover>\n                }\n              >\n                <div>\n                  <Image\n                    src={user.photoUrl}\n                    alt=\"\"\n                    className=\"border rounded-circle\"\n                    style={{ width: 35, marginLeft: \"3%\", cursor: \"pointer\" }}\n                  />\n                  <span style={{ marginLeft: 5 }}>{user.displayName}</span>\n                </div>\n              </OverlayTrigger>\n            </li>\n          ) : (\n            <li className=\"lvl1 parent megamenu\" style={{ cursor: \"pointer\" }}>\n              <a\n                onClick={() => {\n                  dispatch({\n                    type: \"FORM_LOGIN_STATUS\",\n                    payload: true,\n                  });\n                }}\n              >\n                Sign In\n              </a>\n            </li>\n          )}\n          {user.email ? null : (\n            <li className=\"lvl1 parent megamenu\" style={{ cursor: \"pointer\" }}>\n              <a onClick={() => setSigUpScreen(true)}>Sign Up</a>\n            </li>\n          )}\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/library\">Library</NavLink>\n          </li>\n          <li className=\"lvl1 parent megamenu\">\n            <NavLink to=\"/library\">Favorite</NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Modal\n        show={signInScreenStatus.data}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={closeSignIn}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Sign In</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={async (values) => {\n              try {\n                const result = await checkLogin(values);\n                if (result.status === 200) {\n                  closeSignIn();\n                  localStorage.setItem(\"token\", result.data.token);\n                  localStorage.setItem(\"_id\", result.data.user._id);\n                  dispatch({ type: \"DATA_LOGIN\", payload: result.data.user });\n                  return Alert.success(\n                    `<div role=\"alert\"> Sign In Successfully </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                }\n              } catch (error) {\n                return Alert.error(\n                  `<div role=\"alert\">${error.response.data.message}</div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              }\n            }}\n            validationSchema={validationSchema}\n          >\n            {(props) => (\n              <Form className=\"form-horizontal\" onSubmit={props.handleSubmit}>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={3.5}>\n                      Email\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        style={{ width: \"60%\" }}\n                        placeholder=\"Enter your email\"\n                        className=\"ml-5\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={props.touched.email && props.errors.email}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.email && props.errors.email}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Form.Group className=\"ml-3\">\n                  <Form.Row>\n                    <Form.Label column lg={1.7}>\n                      Password\n                    </Form.Label>\n                    <Col>\n                      <Form.Control\n                        lg={4}\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter you password\"\n                        style={{ width: \"65%\" }}\n                        className=\"ml-3\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        isInvalid={\n                          props.touched.password && props.errors.password\n                        }\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {props.touched.password && props.errors.password}\n                      </Form.Control.Feedback>\n                    </Col>\n                  </Form.Row>\n                </Form.Group>\n                <Modal.Footer>\n                  <Button\n                    type=\"submit\"\n                    style={{ height: 47, width: 150, borderRadius: 4 }}\n                  >\n                    Sign in <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\n                  </Button>\n                  <GoogleLogin\n                    clientId=\"262517224867-kufcnkfvmehbscpl4q8tgvpd9sru5hpg.apps.googleusercontent.com\"\n                    buttonText=\"SignIn With Google\"\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={\"single_host_origin\"}\n                  />\n                  <FacebookLogin\n                    appId=\"322522312399138\"\n                    autoLoad={false}\n                    callback={responseFacebook}\n                  />\n                  ,\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n\n      <Modal\n        show={signUpScreen}\n        onHide={closeSignUp}\n        size=\"lg\"\n        centered\n        aria-labelledby=\"contained-modal-title-vcenter\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"card-body card-block\">\n            <Formik\n              initialValues={initialValuesRegister}\n              onSubmit={async (values) => {\n                try {\n                  values.role = \"USER\";\n                  values.displayName = values.name;\n                  const result = await register(values);\n                  if (result.status === 200) {\n                    setSigUpScreen(false);\n                    return Alert.success(\n                      `<div role=\"alert\">\n                                                 ${result.data.message}\n                                                </div>`,\n                      {\n                        html: true,\n                        position: \"top-right\",\n                        effect: \"slide\",\n                      }\n                    );\n                  }\n                } catch (error) {\n                  console.log(error);\n\n                  return Alert.error(\n                    `<div role=\"alert\">\n                                                ${error.response.data.message}\n                                                </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                }\n              }}\n              validationSchema={validationSchemaRegister}\n            >\n              {(props) => (\n                <Form\n                  className=\"form-horizontal ml-5\"\n                  onSubmit={props.handleSubmit}\n                >\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Email\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"email\"\n                          className=\"ml-5\"\n                          style={{ width: \"60%\" }}\n                          placeholder=\"Enter your email\"\n                          onChange={(event) => {\n                            initialValuesRegister.email = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.email && props.errors.email}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.email && props.errors.email}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Name\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"name\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"ml-5\"\n                          style={{ width: \"60%\" }}\n                          placeholder=\"Enter your name\"\n                          onChange={(event) => {\n                            initialValuesRegister.name = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.name && props.errors.name}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.name && props.errors.name}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={1.7}>\n                        Password\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={4}\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          className=\"ml-3\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter your password\"\n                          onChange={(event) => {\n                            initialValuesRegister.password = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={\n                            props.touched.password && props.errors.password\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.password && props.errors.password}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Confirm Password\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={3}\n                          type=\"password\"\n                          id=\"c_password\"\n                          name=\"c_password\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter confirm password\"\n                          onChange={(event) => {\n                            initialValuesRegister.c_password =\n                              event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={\n                            props.touched.c_password && props.errors.c_password\n                          }\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.c_password && props.errors.c_password}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Row>\n                      <Form.Label column lg={3.5}>\n                        Day Of Birth\n                      </Form.Label>\n                      <Col>\n                        <Form.Control\n                          lg={3}\n                          type=\"Date\"\n                          id=\"dob\"\n                          name=\"dob\"\n                          className=\"ml-3\"\n                          style={{ width: \"63%\" }}\n                          placeholder=\"Enter your day of birth\"\n                          onChange={(event) => {\n                            initialValuesRegister.dob = event.target.value;\n                          }}\n                          onBlur={props.handleBlur}\n                          isInvalid={props.touched.dob && props.errors.dob}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {props.touched.dob && props.errors.dob}\n                        </Form.Control.Feedback>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>Avatar</Form.Label>\n                    <Form.File\n                      id=\"photoUrl\"\n                      name=\"photoUrl\"\n                      accept=\"image/png, image/jpeg\"\n                      onChange={(e) => {\n                        uploadMyAvatar(e.target.files[0]);\n                      }}\n                    />\n                    <CardGroup className=\"mt-3\">\n                      {/* {images.map((item) => (\n                        <Card style={{ width: \"18rem\" }} className=\"mb-3 ml-3\">\n                          <i\n                            className=\"fa fa-times-circle\"\n                            aria-hidden=\"true\"\n                            style={{ float: \"right\" }}\n                          ></i>\n                          <Card.Img\n                            variant=\"top\"\n                            src={item}\n                            style={{ width: \"100%\", height: \"100%\" }}\n                          />\n                        </Card>\n                      ))} */}\n                    </CardGroup>\n                  </Form.Group>\n                  <Modal.Footer>\n                    <Button variant=\"success\" type=\"submit\">\n                      Sign Up\n                      <i className=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\n                    </Button>\n                  </Modal.Footer>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={formAddCoins}\n        onHide={() => {\n          setFormAddCoins(false);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add eCoins\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialMoney}\n            validationSchema={validationMoneySchema}\n            onSubmit={(value) => {\n              setFormAddCoins(false);\n              setPaymentMethod(true);\n              setNumberMoney(value.money);\n            }}\n          >\n            {(props) => (\n              <Form\n                onSubmit={props.handleSubmit}\n                id=\"new-review-form\"\n                className=\"new-review-form\"\n              >\n                <Form.Label column lg={3.5}>\n                  Amount of money: Unit $(USD)\n                </Form.Label>\n                <Form.Control\n                  lg={4}\n                  type=\"number\"\n                  name=\"money\"\n                  placeholder=\"Enter you money\"\n                  style={{ width: \"65%\" }}\n                  className=\"ml-3\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  isInvalid={props.touched.money && props.errors.money}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {props.touched.money && props.errors.money}\n                </Form.Control.Feedback>\n                <Modal.Footer>\n                  <Button className=\"btn btn-primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={paymentMethod}\n        onHide={() => {\n          setPaymentMethod(false);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Method\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PayPal\n            toPay={numberMoney}\n            onSuccess={transactionSuccess}\n            transactionError={transactionError}\n            transactionCanceled={transactionCanceled}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            onClick={() => {\n              setPaymentMethod(false);\n            }}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js",["103"],"/Users/phanhoang/Documents/Project/client/src/component/header/slide.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js",["104","105","106","107","108"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { myFavorites, myFavoritesLocal } from \"../../api/index\";\nimport { useSelector } from \"react-redux\";\nimport queryString from \"query-string\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nexport const FavoriteBook = () => {\n  const [books, setBooks] = useState([]);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 5,\n  });\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const userId = localStorage.getItem(\"_id\");\n  const getBookByUser = async () => {\n    try {\n      const paramsString = queryString.stringify(pagination);\n      await myFavorites(localStorage.getItem(\"_id\"), paramsString);\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">\n         ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const getBookLocal = async () => {\n    try {\n      const ids = [\"\"];\n      const paramsString = queryString.stringify({ ids: ids }, pagination);\n      await myFavoritesLocal(ids, paramsString);\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">\n         ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  useEffect(() => {\n    if (userId !== null) {\n      getBookByUser();\n    } else {\n      getBookLocal();\n    }\n  }, [pagination]);\n\n  return (\n    <div>\n      <Alert stack={{ limit: 3 }} />\n      <div className=\"page section-header text-center\">\n        <div className=\"page-title\">\n          <div className=\"wrapper\">\n            <h1 className=\"page-width\">Favorite List</h1>\n          </div>\n        </div>\n      </div>\n      {/*End Page Title*/}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 main-col\">\n            <form action=\"#\">\n              <div className=\"wishlist-table table-content table-responsive\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th className=\"product-name text-center alt-font\">\n                        Remove\n                      </th>\n                      <th className=\"product-price text-center alt-font\">\n                        Images\n                      </th>\n                      <th className=\"product-name alt-font\">Book Name</th>\n                      <th className=\"product-price text-center alt-font\">\n                        Price\n                      </th>\n                      <th className=\"product-subtotal text-center alt-font\">\n                        Action\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {books.map((book) => (\n                      <tr>\n                        <td\n                          className=\"product-remove text-center\"\n                          valign=\"middle\"\n                        >\n                          <button className=\"btn btn-danger\">\n                            <i className=\"icon icon anm anm-times-l\" />\n                          </button>\n                        </td>\n                        <td className=\"product-thumbnail text-center\">\n                          <NavLink to={`books/${book._id}`}>\n                            <img\n                              src=\"assets/images/product-images/product-image8.jpg\"\n                              alt=\"\"\n                              title\n                            />\n                          </NavLink>\n                        </td>\n                        <td className=\"product-name\">\n                          <h4 className=\"no-margin\">\n                            <a href=\"#\">Minerva Dress black</a>\n                          </h4>\n                        </td>\n                        <td className=\"product-price text-center\">\n                          <span className=\"amount\">$165.00</span>\n                        </td>\n                        <td className=\"product-subtotal text-center\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-small btn-success\"\n                          >\n                            Borrow\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <button className=\"btn btn-dark\">Load More</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":33,"column":6,"nodeType":"115","endLine":33,"endColumn":32,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":33,"column":25,"nodeType":"119","messageId":"120","endLine":33,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":48,"column":13,"nodeType":"123","endLine":52,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":302,"column":23,"nodeType":"123","endLine":309,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":319,"column":23,"nodeType":"123","endLine":319,"endColumn":63},{"ruleId":"124","severity":1,"message":"125","line":400,"column":15,"nodeType":"123","endLine":407,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":414,"column":15,"nodeType":"123","endLine":414,"endColumn":55},{"ruleId":"113","severity":1,"message":"126","line":72,"column":6,"nodeType":"115","endLine":72,"endColumn":35,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":17,"nodeType":"119","messageId":"130","endLine":10,"endColumn":25},{"ruleId":"128","severity":1,"message":"131","line":11,"column":22,"nodeType":"119","messageId":"130","endLine":11,"endColumn":35},{"ruleId":"128","severity":1,"message":"132","line":15,"column":9,"nodeType":"119","messageId":"130","endLine":15,"endColumn":13},{"ruleId":"113","severity":1,"message":"133","line":58,"column":6,"nodeType":"115","endLine":58,"endColumn":18,"suggestions":"134"},{"ruleId":"124","severity":1,"message":"135","line":116,"column":29,"nodeType":"123","endLine":116,"endColumn":41},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["138"],"no-use-before-define","'isLoad' was used before it was defined.","Identifier","usedBeforeDefined","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["139"],"no-unused-vars","'setBooks' is assigned a value but never used.","unusedVar","'setPagination' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getBookByUser', 'getBookLocal', and 'userId'. Either include them or remove the dependency array.",["140"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [props.pagination, isLoad, getData]",{"range":"147","text":"148"},"Update the dependencies array to be: [showWriteReview, reviewPage, getReviews]",{"range":"149","text":"150"},"Update the dependencies array to be: [getBookByUser, getBookLocal, pagination, userId]",{"range":"151","text":"152"},[1265,1291],"[props.pagination, isLoad, getData]",[2459,2488],"[showWriteReview, reviewPage, getReviews]",[1650,1662],"[getBookByUser, getBookLocal, pagination, userId]"]