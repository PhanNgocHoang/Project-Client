[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/pages/Library.js":"7","/Users/phanhoang/Documents/Project/client/src/api/index.js":"8","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"9","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"10","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"11","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"12","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"13","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"14","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"15","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"16","/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js":"17","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js":"18","/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js":"19","/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js":"20","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js":"21","/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js":"22","/Users/phanhoang/Documents/Project/client/src/component/myLibrary/myLibrary.js":"23","/Users/phanhoang/Documents/Project/client/src/component/book/book.read.js":"24","/Users/phanhoang/Documents/Project/client/src/component/me/updateMe.js":"25","/Users/phanhoang/Documents/Project/client/src/component/me/addCoins.history.js":"26","/Users/phanhoang/Documents/Project/client/src/component/privacy/index.js":"27"},{"size":754,"mtime":1612274438131,"results":"28","hashOfConfig":"29"},{"size":529,"mtime":1614761905619,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1612166816275,"results":"31","hashOfConfig":"29"},{"size":1285,"mtime":1614767229454,"results":"32","hashOfConfig":"29"},{"size":1097,"mtime":1615253975507,"results":"33","hashOfConfig":"29"},{"size":8720,"mtime":1615178320433,"results":"34","hashOfConfig":"29"},{"size":8558,"mtime":1615278276083,"results":"35","hashOfConfig":"29"},{"size":3400,"mtime":1615278316463,"results":"36","hashOfConfig":"29"},{"size":35720,"mtime":1615197644548,"results":"37","hashOfConfig":"29"},{"size":2366,"mtime":1615278571298,"results":"38","hashOfConfig":"29"},{"size":3118,"mtime":1614830434729,"results":"39","hashOfConfig":"29"},{"size":308,"mtime":1614580633314,"results":"40","hashOfConfig":"29"},{"size":312,"mtime":1614580603605,"results":"41","hashOfConfig":"29"},{"size":220,"mtime":1614580415000,"results":"42","hashOfConfig":"29"},{"size":771,"mtime":1614483006566,"results":"43","hashOfConfig":"29"},{"size":309,"mtime":1613364752389,"results":"44","hashOfConfig":"29"},{"size":19262,"mtime":1615278955051,"results":"45","hashOfConfig":"29"},{"size":1184,"mtime":1614738412055,"results":"46","hashOfConfig":"29"},{"size":312,"mtime":1614217545655,"results":"47","hashOfConfig":"29"},{"size":4956,"mtime":1615197530853,"results":"48","hashOfConfig":"29"},{"size":2684,"mtime":1614953435315,"results":"49","hashOfConfig":"29"},{"size":326,"mtime":1614580726820,"results":"50","hashOfConfig":"29"},{"size":16171,"mtime":1615278630908,"results":"51","hashOfConfig":"29"},{"size":4856,"mtime":1615276033671,"results":"52","hashOfConfig":"29"},{"size":10896,"mtime":1615193373474,"results":"53","hashOfConfig":"29"},{"size":3385,"mtime":1615193230413,"results":"54","hashOfConfig":"29"},{"size":1794,"mtime":1615254566189,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1qfk95l",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["115","116"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",["117"],"import React, { useEffect, useState } from \"react\";\nimport Alert from \"react-s-alert\";\nimport queryString from \"query-string\";\nimport { getBook, FavoriteBook, createOrder } from \"../../api/index\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as types from \"../../constants/index\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Image, Modal, Button, Form } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faHeart as fasHeart,\n  faCoins,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nconst validationSchema = yup.object().shape({\n  totalDate: yup\n    .number()\n    .min(1, \"Please enter a day number\")\n    .required(\"Please enter a date number\"),\n});\nexport const Books = (props) => {\n  const initialValues = {\n    totalDate: 0,\n  };\n  const dispatch = useDispatch();\n  const [book, setBook] = useState({});\n  const [isLoad, setLoad] = useState(false);\n  const [formBorrow, setFormBorrow] = useState(false);\n  const getData = async () => {\n    try {\n      const paramsString = queryString.stringify(props.pagination);\n      const result = await getBook(paramsString);\n      if (result.status === 200) {\n        dispatch({ type: types.NEW_BOOKS, payload: result.data.data.data });\n      }\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i> ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [props.pagination, isLoad]);\n  const newBooks = useSelector((state) => {\n    return state.newBooks.data;\n  });\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n\n  const addToMyFavorite = async (id) => {\n    if (localStorage.getItem(\"_id\") === null) {\n      dispatch({ type: \"FORM_LOGIN_STATUS\", payload: true });\n    } else {\n      await FavoriteBook({\n        bookId: id,\n        userId: localStorage.getItem(\"_id\"),\n      });\n      setLoad(!isLoad);\n    }\n  };\n  const borrow = async (book) => {\n    if (localStorage.getItem(\"_id\") === null) {\n      dispatch({ type: \"FORM_LOGIN_STATUS\", payload: true });\n    } else {\n      setBook(book);\n      setFormBorrow(true);\n    }\n  };\n  return (\n    <div className=\"row\">\n      <Alert stack={{ limit: 3 }} />\n      {newBooks.map((item) => (\n        <div className={props.position} key={item._id}>\n          <div className=\"product-image\">\n            <div className=\"grid-view-item__link\">\n              <NavLink to={`books/${item._id}`}>\n                <Image\n                  style={{ width: 400, height: 280 }}\n                  className=\"lazyload\"\n                  data-src={item.images}\n                  src={item.images}\n                  alt=\"image\"\n                  title={item.description}\n                />\n              </NavLink>\n            </div>\n            <div className=\"button-set\">\n              <div className=\"wishlist-btn\">\n                <button\n                  className=\"btn wishlist add-to-wishlist\"\n                  onClick={() => addToMyFavorite(item._id)}\n                >\n                  <FontAwesomeIcon\n                    icon={\n                      item.userFavorite.some(\n                        (userId) => userId._id === user._id\n                      )\n                        ? fasHeart\n                        : faHeart\n                    }\n                    color={\n                      item.userFavorite.some(\n                        (userId) => userId._id === user._id\n                      )\n                        ? \"#ed8a8a\"\n                        : \"#ececec\"\n                    }\n                  />\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"product-details text-center\">\n            <div\n              style={{\n                height: 50,\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              <NavLink to={`books/${item._id}`}>{item.book_name}</NavLink>\n            </div>\n            <div className=\"product-price\">\n              <span className=\"price\">\n                {item.price} <FontAwesomeIcon icon={faCoins} color=\"#64ccdb\" />/\n                day\n              </span>\n            </div>\n            <button\n              className=\"btn btn-success btn-addto-cart\"\n              type=\"button\"\n              style={{ marginTop: 3 }}\n              tabIndex={0}\n              onClick={() => {\n                borrow(item);\n              }}\n            >\n              Borrow\n            </button>\n          </div>\n        </div>\n      ))}\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={formBorrow}\n        onHide={() => {\n          setFormBorrow(false);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Borrow</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={async (values) => {\n              try {\n                const totalPrice = values.totalDate * book.price;\n                if (totalPrice > user.wallet) {\n                  return Alert.warning(\n                    `<div role=\"alert\"><i class=\"fas fa-exclamation-triangle\"></i>\n                                      Your eCoins are not enough to borrow this book\n                                      </div>`,\n                    {\n                      html: true,\n                      position: \"top-right\",\n                      effect: \"slide\",\n                    }\n                  );\n                }\n                values.price = totalPrice;\n                values.userId = user._id;\n                values.bookId = book._id;\n                values.endAt = moment(new Date())\n                  .add(values.totalDate, \"day\")\n                  .format(\"YYYY-MM-DD HH:MM\");\n                values.startedAt = moment(new Date()).format(\n                  \"YYYY-MM-DD HH:MM\"\n                );\n                setFormBorrow(false);\n                const result = await createOrder(values);\n                Alert.success(\n                  `<div role=\"alert\">\n                  <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n                              ${result.data.message}\n                              </div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n                return <Redirect to={`/books/read/${result.data.order._id}`} />;\n              } catch (error) {\n                return Alert.error(\n                  `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n                                  ${error.response.data.message}</div>`,\n                  {\n                    html: true,\n                    position: \"top-right\",\n                    effect: \"slide\",\n                  }\n                );\n              }\n            }}\n          >\n            {(props) => (\n              <Form\n                onSubmit={props.handleSubmit}\n                id=\"new-review-form\"\n                className=\"new-review-form\"\n              >\n                <Form.Label column lg={3.5}>\n                  Total Date: Day\n                </Form.Label>\n                <Form.Control\n                  lg={4}\n                  type=\"text\"\n                  name=\"totalDate\"\n                  placeholder=\"Enter total date borrow\"\n                  style={{ width: \"65%\" }}\n                  className=\"ml-3\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  isInvalid={props.touched.totalDate && props.errors.totalDate}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {props.touched.totalDate && props.errors.totalDate}\n                </Form.Control.Feedback>\n                <Modal.Footer>\n                  <Button className=\"btn btn-primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/pages/Library.js",[],"/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",[],"/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",["118"],"import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { getBook } from \"../../api/index\";\nimport queryString from \"query-string\";\nimport Alert from \"react-s-alert\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCoins } from \"@fortawesome/free-solid-svg-icons\";\nexport const Search = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 5,\n    searchKey: \"\",\n  });\n  const search = async () => {\n    try {\n      const paramsString = queryString.stringify(pagination);\n      const result = await getBook(paramsString);\n      if (result.status === 200) {\n        setSearchResult(result.data.data.data);\n      }\n    } catch (error) {\n      return Alert.error(`<div role=\"alert\">Can Not Get New Book</div>`, {\n        html: true,\n        position: \"top-right\",\n        effect: \"slide\",\n      });\n    }\n  };\n  useEffect(() => {\n    search();\n  }, [pagination]);\n  return (\n    <div className=\"search\">\n      <div className=\"search__form\">\n        <div className=\"search-bar__form\">\n          <button className=\"go-btn search__button\">\n            <i className=\"icon anm anm-search-l\" />\n          </button>\n          <input\n            className=\"search__input\"\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Search entire store...\"\n            aria-label=\"Search\"\n            value={pagination.searchKey}\n            onChange={(event) => {\n              setPagination({ ...pagination, searchKey: event.target.value });\n            }}\n          />\n          <div style={{ marginTop: 10 }}>\n            {searchResult.map((item) => (\n              <NavLink\n                key={item._id}\n                to={`/books/${item._id}`}\n                onClick={() => {\n                  document.getElementById(\"closeSearch\").click();\n                }}\n              >\n                <Card>\n                  <Card.Header>{item.book_name}</Card.Header>\n                  <Card.Body>\n                    <Card.Img\n                      src={item.images}\n                      style={{ width: 100, height: 100 }}\n                    />\n                    <Card.Title>{item.authors[0].authorName}</Card.Title>\n                    <Card.Text>\n                      {\" \"}\n                      {item.price}{\" \"}\n                      <FontAwesomeIcon icon={faCoins} color=\"#64ccdb\" /> / day\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </NavLink>\n            ))}\n          </div>\n          <button\n            className=\"btn btn-dark\"\n            onClick={() => {\n              setPagination({ ...pagination, limit: pagination.limit + 5 });\n            }}\n          >\n            Load More\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className=\"search-trigger close-btn\"\n          id=\"closeSearch\"\n        >\n          <i className=\"anm anm-times-l\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js",["119"],"/Users/phanhoang/Documents/Project/client/src/component/header/slide.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js",["120"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { myFavorites, FavoriteBook } from \"../../api/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport queryString from \"query-string\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nexport const FavoriteBookComponent = () => {\n  const dispatch = useDispatch();\n  const [books, setBooks] = useState([]);\n  const [isLoad, setLoad] = useState(false);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 5,\n  });\n  const userId = localStorage.getItem(\"_id\");\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const formSignIn = useSelector((state) => {\n    return state.formLoginStatus.data;\n  });\n  const getBookByUser = async () => {\n    try {\n      if (userId === null) {\n        dispatch({ type: \"FORM_LOGIN_STATUS\", payload: true });\n      } else {\n        const paramsString = queryString.stringify(pagination);\n        const response = await myFavorites(user._id, paramsString);\n        setBooks(response.data.data);\n      }\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n         ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  useEffect(() => {\n    getBookByUser();\n  }, [pagination, isLoad, formSignIn]);\n  const removeFavorites = async (id) => {\n    await FavoriteBook({\n      bookId: id,\n      userId: userId,\n    });\n    setLoad(!isLoad);\n  };\n  const loadMore = () => {\n    setPagination({ ...pagination, limit: pagination.limit + 5 });\n  };\n  return (\n    <div style={{ marginBottom: \"20%\" }}>\n      <Alert stack={{ limit: 3 }} />\n      <div className=\"page section-header text-center\">\n        <div className=\"page-title\">\n          <div className=\"wrapper\">\n            <h1 className=\"page-width\">Favorite List</h1>\n          </div>\n        </div>\n      </div>\n      {/*End Page Title*/}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 main-col\">\n            <div className=\"table-content table-responsive\">\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th className=\"product-name text-center alt-font\">\n                      Remove\n                    </th>\n                    <th className=\"product-price text-center alt-font\">\n                      Images\n                    </th>\n                    <th className=\"product-name alt-font\">Book Name</th>\n                    <th className=\"product-price text-center alt-font\">\n                      Price: eCoins\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {books.map((book) => (\n                    <tr>\n                      <td\n                        className=\"product-remove text-center\"\n                        valign=\"middle\"\n                      >\n                        <button\n                          className=\"btn btn-danger\"\n                          onClick={() => {\n                            removeFavorites(book._id);\n                          }}\n                        >\n                          <i className=\"icon icon anm anm-times-l\" />\n                        </button>\n                      </td>\n                      <td className=\"product-thumbnail text-center\">\n                        <NavLink to={`books/${book._id}`}>\n                          <img\n                            src={book.images}\n                            alt=\"\"\n                            title\n                            style={{ height: 60, width: 60 }}\n                          />\n                        </NavLink>\n                      </td>\n                      <td\n                        className=\"product-name\"\n                        style={{ height: 100, width: 400 }}\n                      >\n                        <p className=\"no-margin\">\n                          <NavLink to={`books/${book._id}`}>\n                            {book.book_name}\n                          </NavLink>\n                        </p>\n                      </td>\n                      <td className=\"product-price text-center\">\n                        <span className=\"amount\">{book.price}</span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <button\n              className=\"btn btn-dark\"\n              onClick={() => {\n                loadMore();\n              }}\n            >\n              Load More\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js",[],"/Users/phanhoang/Documents/Project/client/src/component/myLibrary/myLibrary.js",["121","122"],"/Users/phanhoang/Documents/Project/client/src/component/book/book.read.js",[],"/Users/phanhoang/Documents/Project/client/src/component/me/updateMe.js",[],"/Users/phanhoang/Documents/Project/client/src/component/me/addCoins.history.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport { PaymentHistory } from \"../../api/index\";\nimport queryString from \"query-string\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nexport const AddCoinsHistory = () => {\n  const [history, setHistory] = useState([]);\n  const [pagination, setPagination] = useState({\n    limit: 5,\n    page: 1,\n  });\n  const getData = async () => {\n    try {\n      const paramsString = queryString.stringify(pagination);\n      const response = await PaymentHistory(paramsString);\n      setHistory(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [pagination]);\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  if (!user._id) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div style={{ marginBottom: \"20%\" }}>\n      <div className=\"page section-header text-center\">\n        <div className=\"page-title\">\n          <div className=\"wrapper\">\n            <h1 className=\"page-width\"> Coin deposit history</h1>\n          </div>\n        </div>\n      </div>\n      {/*End Page Title*/}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 main-col\">\n            <div className=\"table-content table-responsive\">\n              <table className=\"table \">\n                <thead>\n                  <tr>\n                    <th className=\"product-price text-center alt-font\">\n                      Payment ID\n                    </th>\n                    <th className=\"product-name alt-font\">Amount</th>\n                    <th className=\"product-price text-center alt-font\">\n                      Currency\n                    </th>\n                    <th className=\"product-price text-center alt-font\">\n                      Payee Email\n                    </th>\n                    <th className=\"product-price text-center alt-font\">\n                      Payment At\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {history.map((item) => (\n                    <tr key={item._id}>\n                      <td\n                        className=\"product-remove text-center\"\n                        valign=\"middle\"\n                      >\n                        {item.paymentId}\n                      </td>\n                      <td className=\"product-thumbnail text-center\">\n                        {item.amount}\n                      </td>\n                      <td className=\"product-name\">{item.currency}</td>\n                      <td className=\"product-price text-center\">\n                        {item.payeeEmail}\n                      </td>\n                      <td className=\"product-price text-center\">\n                        {moment(item.createdAt).format(\"YYYY-MM-DD HH:MM\")}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <button\n              className=\"btn btn-dark\"\n              onClick={() => {\n                setPagination({ ...pagination, limit: pagination.limit + 5 });\n              }}\n            >\n              Load More\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/privacy/index.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":6,"nodeType":"130","endLine":54,"endColumn":32,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":33,"column":6,"nodeType":"130","endLine":33,"endColumn":18,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"134","line":75,"column":6,"nodeType":"130","endLine":75,"endColumn":35,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":47,"column":6,"nodeType":"130","endLine":47,"endColumn":38,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":41,"column":6,"nodeType":"130","endLine":41,"endColumn":26,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":60,"column":6,"nodeType":"130","endLine":60,"endColumn":24,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"129","line":24,"column":6,"nodeType":"130","endLine":24,"endColumn":18,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["145"],"React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'getBookByUser'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'getBooksStatus'. Either include it or remove the dependency array.",["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [props.pagination, isLoad, getData]",{"range":"166","text":"167"},"Update the dependencies array to be: [pagination, search]",{"range":"168","text":"169"},"Update the dependencies array to be: [showWriteReview, reviewPage, getReviews]",{"range":"170","text":"171"},"Update the dependencies array to be: [pagination, isLoad, formSignIn, getBookByUser]",{"range":"172","text":"173"},"Update the dependencies array to be: [pagination, isLoad, getBooks]",{"range":"174","text":"175"},"Update the dependencies array to be: [getBooksStatus, paginationStatus]",{"range":"176","text":"177"},"Update the dependencies array to be: [getData, pagination]",{"range":"178","text":"179"},[1865,1891],"[props.pagination, isLoad, getData]",[1045,1057],"[pagination, search]",[2497,2526],"[showWriteReview, reviewPage, getReviews]",[1535,1567],"[pagination, isLoad, formSignIn, getBookByUser]",[1404,1424],"[pagination, isLoad, getBooks]",[1928,1946],"[getBooksStatus, paginationStatus]",[726,738],"[getData, pagination]"]