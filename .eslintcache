[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/api/index.js":"7","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"8","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"9","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"10","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"11","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"12","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"13","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"14","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"15","/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js":"16","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js":"17","/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js":"18","/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js":"19","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js":"20","/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js":"21","/Users/phanhoang/Documents/Project/client/src/component/myLibrary/myLibrary.js":"22","/Users/phanhoang/Documents/Project/client/src/component/book/book.read.js":"23","/Users/phanhoang/Documents/Project/client/src/component/me/updateMe.js":"24","/Users/phanhoang/Documents/Project/client/src/component/me/addCoins.history.js":"25","/Users/phanhoang/Documents/Project/client/src/component/privacy/index.js":"26","/Users/phanhoang/Documents/Project/client/src/component/category/category.js":"27"},{"size":754,"mtime":1612274438131,"results":"28","hashOfConfig":"29"},{"size":528,"mtime":1616049783186,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1612166816275,"results":"31","hashOfConfig":"29"},{"size":1285,"mtime":1614767229454,"results":"32","hashOfConfig":"29"},{"size":1100,"mtime":1616051141382,"results":"33","hashOfConfig":"29"},{"size":10045,"mtime":1620308505282,"results":"34","hashOfConfig":"29"},{"size":3431,"mtime":1620307394432,"results":"35","hashOfConfig":"29"},{"size":32832,"mtime":1620307906632,"results":"36","hashOfConfig":"29"},{"size":1876,"mtime":1618584304000,"results":"37","hashOfConfig":"29"},{"size":3270,"mtime":1615629519668,"results":"38","hashOfConfig":"29"},{"size":308,"mtime":1614580633314,"results":"39","hashOfConfig":"29"},{"size":312,"mtime":1614580603605,"results":"40","hashOfConfig":"29"},{"size":220,"mtime":1614580415000,"results":"41","hashOfConfig":"29"},{"size":802,"mtime":1620307385387,"results":"42","hashOfConfig":"29"},{"size":309,"mtime":1613364752389,"results":"43","hashOfConfig":"29"},{"size":19381,"mtime":1620308605349,"results":"44","hashOfConfig":"29"},{"size":1184,"mtime":1614738412055,"results":"45","hashOfConfig":"29"},{"size":312,"mtime":1614217545655,"results":"46","hashOfConfig":"29"},{"size":5857,"mtime":1620308550366,"results":"47","hashOfConfig":"29"},{"size":2684,"mtime":1614953435315,"results":"48","hashOfConfig":"29"},{"size":326,"mtime":1614580726820,"results":"49","hashOfConfig":"29"},{"size":19218,"mtime":1620308199883,"results":"50","hashOfConfig":"29"},{"size":5385,"mtime":1620308517793,"results":"51","hashOfConfig":"29"},{"size":11220,"mtime":1620308146953,"results":"52","hashOfConfig":"29"},{"size":3751,"mtime":1620308179615,"results":"53","hashOfConfig":"29"},{"size":1815,"mtime":1615629595449,"results":"54","hashOfConfig":"29"},{"size":13535,"mtime":1616466158000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1qfk95l",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["112","113"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",[],"/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",[],"/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/slide.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js",[],"/Users/phanhoang/Documents/Project/client/src/utils/paypal.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/formLogin.js",[],"/Users/phanhoang/Documents/Project/client/src/component/myLibrary/myLibrary.js",["114","115"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { Image, Button, Spinner } from \"react-bootstrap\";\nimport { myBooks, myBooksStatus, FavoriteBook } from \"../../api/index\";\nimport queryString from \"query-string\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nexport const MyLibrary = () => {\n  const dispatch = useDispatch();\n  const [books, setBooks] = useState();\n  const [isLoad, setLoad] = useState(false);\n  const [booksCanRead, setBooksCanRead] = useState();\n  const [booksExpired, setBooksExpired] = useState();\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 8,\n  });\n  const [paginationStatus, setPaginationStatus] = useState({\n    page: 1,\n    limit: 8,\n    status: true,\n  });\n  const getBooks = async () => {\n    try {\n      const paginationString = queryString.stringify(pagination);\n      const response = await myBooks(\n        localStorage.getItem(\"_id\"),\n        paginationString\n      );\n      setBooks(response.data.data);\n    } catch (error) {\n      if (error.response.data.message) {\n        return Alert.error(\n          `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n         ${error.response.data.message}</div>`,\n          {\n            html: true,\n            position: \"top-right\",\n            effect: \"slide\",\n          }\n        );\n      }\n    }\n  };\n  useEffect(() => {\n    getBooks();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pagination, isLoad]);\n  const getBooksStatus = async () => {\n    try {\n      const paginationString = queryString.stringify(paginationStatus);\n      const response = await myBooksStatus(\n        localStorage.getItem(\"_id\"),\n        paginationString\n      );\n      if (paginationStatus.status === true) {\n        setBooksCanRead(response.data.data);\n      } else {\n        setBooksExpired(response.data.data);\n      }\n    } catch (error) {\n      if (error.response.data.message) {\n        return Alert.error(\n          `<div role=\"alert\"><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n         ${error.response.data.message}</div>`,\n          {\n            html: true,\n            position: \"top-right\",\n            effect: \"slide\",\n          }\n        );\n      }\n    }\n  };\n  useEffect(() => {\n    getBooksStatus();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paginationStatus]);\n  const getBookCanRead = async () => {\n    setPaginationStatus(paginationStatus);\n  };\n  const getBooksExpired = async () => {\n    setPaginationStatus({ ...paginationStatus, status: false });\n  };\n  const addToMyFavorite = async (id) => {\n    if (localStorage.getItem(\"_id\") === null) {\n      dispatch({ type: \"FORM_LOGIN_STATUS\", payload: true });\n    } else {\n      await FavoriteBook({\n        bookId: id,\n        userId: localStorage.getItem(\"_id\"),\n      });\n      setLoad(!isLoad);\n    }\n  };\n  return (\n    <div className=\"container\" style={{ marginBottom: \"30%\", marginTop: \"3%\" }}>\n      <Tabs>\n        <TabList>\n          <Tab>Total</Tab>\n          <Tab\n            onClick={() => {\n              getBookCanRead();\n            }}\n          >\n            Can Read\n          </Tab>\n          <Tab\n            onClick={() => {\n              getBooksExpired();\n            }}\n          >\n            Expired\n          </Tab>\n        </TabList>\n        <TabPanel>\n          <div className=\"row\">\n            {books ? (\n              books.length === 0 ? (\n                <span>No Data</span>\n              ) : (\n                books.map((item) => (\n                  <div\n                    className=\"col-6 col-sm-2 col-md-3 col-lg-3 item\"\n                    key={item._id}\n                    style={{ marginBottom: 3, marginTop: 3 }}\n                  >\n                    <div className=\"product-image\">\n                      <div className=\"grid-view-item__link\">\n                        <Image\n                          style={{ width: 400, height: 300 }}\n                          className=\"lazyload\"\n                          data-src={item.bookId.images}\n                          src={item.bookId.images}\n                          alt=\"image\"\n                          title={item.bookId.description}\n                        />\n                      </div>\n                      <div className=\"button-set\">\n                        <div className=\"wishlist-btn\">\n                          <button\n                            className=\"btn wishlist add-to-wishlist\"\n                            onClick={() => addToMyFavorite(item.bookId._id)}\n                          >\n                            <FontAwesomeIcon\n                              icon={\n                                item.bookId.userFavorite.some(\n                                  (userId) => userId._id === localStorage.userId\n                                )\n                                  ? fasHeart\n                                  : faHeart\n                              }\n                              color={\n                                item.bookId.userFavorite.some(\n                                  (userId) => userId === item.userId\n                                )\n                                  ? \"#ed8a8a\"\n                                  : \"#ececec\"\n                              }\n                            />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"product-details text-center\">\n                      {/* product name */}\n                      <NavLink to={`books/${item.bookId._id}`}>\n                        <div\n                          // className=\"product-name\"\n                          style={{\n                            height: 50,\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                          }}\n                        >\n                          {item.bookId.book_name}\n                        </div>\n                      </NavLink>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Total Date: {item.totalDate} Day\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Total Price: {item.price} eCoins\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Started At:{\" \"}\n                          {moment(item.startedAt).format(\"YYYY-MM-DD HH:MM\")}\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          End At:{\" \"}\n                          {moment(item.endAt).format(\"YYYY-MM-DD HH:MM\")}\n                        </span>\n                      </div>\n                      {item.status === true ? (\n                        <NavLink to={`/books/read/${item._id}`}>\n                          <button\n                            className=\"btn btn-success btn-addto-cart\"\n                            type=\"button\"\n                            style={{ marginTop: 3 }}\n                            tabIndex={0}\n                          >\n                            Read\n                          </button>\n                        </NavLink>\n                      ) : (\n                        <Button\n                          className=\"btn btn-danger\"\n                          style={{ marginTop: 3 }}\n                          disabled={true}\n                        >\n                          Expired\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                ))\n              )\n            ) : (\n              <Spinner\n                animation=\"border\"\n                variant=\"info\"\n                style={{\n                  marginTop: 50,\n                  marginLeft: \"45%\",\n                  width: 150,\n                  height: 150,\n                }}\n              />\n            )}\n            <Button\n              variant=\"dark\"\n              style={{ marginTop: 100, marginLeft: \"45%\", marginRight: \"45%\" }}\n              onClick={() => {\n                setPagination({ ...pagination, limit: pagination.limit + 4 });\n              }}\n            >\n              Load More\n            </Button>\n          </div>\n        </TabPanel>\n        <TabPanel>\n          <div className=\"row\">\n            {booksCanRead ? (\n              booksCanRead.length === 0 ? (\n                <span>No Data</span>\n              ) : (\n                booksCanRead.map((item) => (\n                  <div\n                    className=\"col-6 col-sm-2 col-md-3 col-lg-3 item\"\n                    key={item._id}\n                    style={{ marginBottom: 3, marginTop: 3 }}\n                  >\n                    {/* start product image */}\n\n                    <div className=\"product-image\">\n                      {/* start product image */}\n\n                      <div className=\"grid-view-item__link\">\n                        <Image\n                          style={{ width: 400, height: 300 }}\n                          className=\"lazyload\"\n                          data-src={item.bookId.images}\n                          src={item.bookId.images}\n                          alt=\"image\"\n                          title={item.bookId.description}\n                        />\n                      </div>\n                      <div className=\"button-set\">\n                        <div className=\"wishlist-btn\">\n                          <button\n                            className=\"btn wishlist add-to-wishlist\"\n                            onClick={() => addToMyFavorite(item._id)}\n                          >\n                            <FontAwesomeIcon\n                              icon={\n                                item.bookId.userFavorite.some(\n                                  (userId) => userId._id === localStorage.userId\n                                )\n                                  ? fasHeart\n                                  : faHeart\n                              }\n                              color={\n                                item.bookId.userFavorite.some(\n                                  (userId) => userId === item.userId\n                                )\n                                  ? \"#ed8a8a\"\n                                  : \"#ececec\"\n                              }\n                            />\n                          </button>\n                        </div>\n                      </div>\n                      {/* end product button */}\n                    </div>\n                    {/* end product image */}\n                    {/*start product details */}\n                    <div className=\"product-details text-center\">\n                      {/* product name */}\n                      <NavLink to={`books/${item.bookId._id}`}>\n                        <div\n                          // className=\"product-name\"\n                          style={{\n                            height: 50,\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                          }}\n                        >\n                          {item.bookId.book_name}\n                        </div>\n                      </NavLink>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Total Date: {item.totalDate} Day\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Total Price: {item.price} eCoins\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Started At:{\" \"}\n                          {moment(item.startedAt).format(\"YYYY-MM-DD HH:MM\")}\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Started At:{\" \"}\n                          {moment(item.endAt).format(\"YYYY-MM-DD HH:MM\")}\n                        </span>\n                      </div>\n                      <NavLink to={`/books/read/${item._id}`}>\n                        <button\n                          className=\"btn btn-success btn-addto-cart\"\n                          type=\"button\"\n                          style={{ marginTop: 3 }}\n                          tabIndex={0}\n                        >\n                          Read\n                        </button>\n                      </NavLink>\n                    </div>\n                  </div>\n                ))\n              )\n            ) : (\n              <Spinner\n                animation=\"border\"\n                variant=\"info\"\n                style={{\n                  marginTop: 50,\n                  marginLeft: \"45%\",\n                  width: 150,\n                  height: 150,\n                }}\n              />\n            )}\n            <Button\n              variant=\"dark\"\n              style={{ marginTop: 100, marginLeft: \"45%\", marginRight: \"45%\" }}\n              onClick={() => {\n                setPaginationStatus({\n                  ...paginationStatus,\n                  limit: paginationStatus.limit + 4,\n                });\n              }}\n            >\n              Load More\n            </Button>\n          </div>\n        </TabPanel>\n        <TabPanel>\n          <div className=\"row\">\n            {booksExpired ? (\n              booksExpired.length === 0 ? (\n                <span>No Data</span>\n              ) : (\n                booksExpired.map((item) => (\n                  <div\n                    className=\"col-6 col-sm-2 col-md-3 col-lg-3 item\"\n                    key={item._id}\n                    style={{ marginBottom: 3, marginTop: 3 }}\n                  >\n                    {/* start product image */}\n\n                    <div className=\"product-image\">\n                      {/* start product image */}\n\n                      <div className=\"grid-view-item__link\">\n                        <Image\n                          style={{ width: 400, height: 300 }}\n                          className=\"lazyload\"\n                          data-src={item.bookId.images}\n                          src={item.bookId.images}\n                          alt=\"image\"\n                          title={item.bookId.description}\n                        />\n                      </div>\n                      <div className=\"button-set\">\n                        <div className=\"wishlist-btn\">\n                          <button\n                            className=\"btn wishlist add-to-wishlist\"\n                            onClick={() => addToMyFavorite(item._id)}\n                          >\n                            <FontAwesomeIcon\n                              icon={\n                                item.bookId.userFavorite.some(\n                                  (userId) => userId._id === localStorage.userId\n                                )\n                                  ? fasHeart\n                                  : faHeart\n                              }\n                              color={\n                                item.bookId.userFavorite.some(\n                                  (userId) => userId === item.userId\n                                )\n                                  ? \"#ed8a8a\"\n                                  : \"#ececec\"\n                              }\n                            />\n                          </button>\n                        </div>\n                      </div>\n                      {/* end product button */}\n                    </div>\n                    {/* end product image */}\n                    {/*start product details */}\n                    <div className=\"product-details text-center\">\n                      {/* product name */}\n                      <NavLink to={`books/${item.bookId._id}`}>\n                        <div\n                          // className=\"product-name\"\n                          style={{\n                            height: 50,\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                          }}\n                        >\n                          {item.bookId.book_name}\n                        </div>\n                      </NavLink>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Total Date: {item.totalDate} Day\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Total Price: {item.price} eCoins\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Started At:{\" \"}\n                          {moment(item.startedAt).format(\"YYYY-MM-DD HH:MM\")}\n                        </span>\n                      </div>\n                      <div className=\"product-price\">\n                        <span className=\"price\">\n                          Started At:{\" \"}\n                          {moment(item.endAt).format(\"YYYY-MM-DD HH:MM\")}\n                        </span>\n                      </div>\n                      <Button\n                        className=\"btn btn-danger\"\n                        disabled\n                        style={{ marginTop: 3 }}\n                      >\n                        Expired\n                      </Button>\n                    </div>\n                  </div>\n                ))\n              )\n            ) : (\n              <Spinner\n                animation=\"border\"\n                variant=\"info\"\n                style={{\n                  marginTop: 50,\n                  marginLeft: \"45%\",\n                  width: 150,\n                  height: 150,\n                }}\n              />\n            )}\n            <Button\n              variant=\"dark\"\n              style={{ marginTop: 100, marginLeft: \"45%\", marginRight: \"45%\" }}\n              onClick={() => {\n                setPaginationStatus({\n                  ...paginationStatus,\n                  limit: paginationStatus.limit + 4,\n                });\n              }}\n            >\n              Load More\n            </Button>\n          </div>\n        </TabPanel>\n      </Tabs>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/book/book.read.js",[],"/Users/phanhoang/Documents/Project/client/src/component/me/updateMe.js",[],"/Users/phanhoang/Documents/Project/client/src/component/me/addCoins.history.js",["116"],"/Users/phanhoang/Documents/Project/client/src/component/privacy/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/category/category.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":2,"message":"122","line":37,"column":16,"nodeType":"123","messageId":"124","endLine":37,"endColumn":21},{"ruleId":"121","severity":2,"message":"122","line":67,"column":16,"nodeType":"123","messageId":"124","endLine":67,"endColumn":21},{"ruleId":"121","severity":2,"message":"122","line":20,"column":16,"nodeType":"123","messageId":"124","endLine":20,"endColumn":21},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-undef","'Alert' is not defined.","Identifier","undef","no-global-assign","no-unsafe-negation"]