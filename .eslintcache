[{"/Users/phanhoang/Documents/Project/client/src/index.js":"1","/Users/phanhoang/Documents/Project/client/src/App.js":"2","/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js":"3","/Users/phanhoang/Documents/Project/client/src/pages/Home.js":"4","/Users/phanhoang/Documents/Project/client/src/component/router.js":"5","/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js":"6","/Users/phanhoang/Documents/Project/client/src/pages/Library.js":"7","/Users/phanhoang/Documents/Project/client/src/api/index.js":"8","/Users/phanhoang/Documents/Project/client/src/component/header/header.js":"9","/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js":"10","/Users/phanhoang/Documents/Project/client/src/component/book/search.js":"11","/Users/phanhoang/Documents/Project/client/src/reducers/index.js":"12","/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js":"13","/Users/phanhoang/Documents/Project/client/src/constants/index.js":"14","/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js":"15","/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js":"16","/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js":"17","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js":"18","/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js":"19","/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js":"20","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js":"21"},{"size":754,"mtime":1612274438131,"results":"22","hashOfConfig":"23"},{"size":525,"mtime":1613553364374,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1612166816275,"results":"25","hashOfConfig":"23"},{"size":1276,"mtime":1614176977133,"results":"26","hashOfConfig":"23"},{"size":564,"mtime":1614398308577,"results":"27","hashOfConfig":"23"},{"size":3608,"mtime":1614437156378,"results":"28","hashOfConfig":"23"},{"size":11413,"mtime":1614414865710,"results":"29","hashOfConfig":"23"},{"size":2777,"mtime":1614574892164,"results":"30","hashOfConfig":"23"},{"size":30526,"mtime":1614574855947,"results":"31","hashOfConfig":"23"},{"size":2809,"mtime":1614219045988,"results":"32","hashOfConfig":"23"},{"size":2476,"mtime":1613558842888,"results":"33","hashOfConfig":"23"},{"size":246,"mtime":1614217574237,"results":"34","hashOfConfig":"23"},{"size":311,"mtime":1612274732172,"results":"35","hashOfConfig":"23"},{"size":166,"mtime":1614217535617,"results":"36","hashOfConfig":"23"},{"size":771,"mtime":1614483006566,"results":"37","hashOfConfig":"23"},{"size":309,"mtime":1613364752389,"results":"38","hashOfConfig":"23"},{"size":17278,"mtime":1614518504519,"results":"39","hashOfConfig":"23"},{"size":1223,"mtime":1614222755452,"results":"40","hashOfConfig":"23"},{"size":312,"mtime":1614217545655,"results":"41","hashOfConfig":"23"},{"size":4889,"mtime":1614486844914,"results":"42","hashOfConfig":"23"},{"size":2672,"mtime":1614519927783,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1qfk95l",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/phanhoang/Documents/Project/client/src/index.js",[],["91","92"],"/Users/phanhoang/Documents/Project/client/src/App.js",[],"/Users/phanhoang/Documents/Project/client/src/reportWebVitals.js",[],"/Users/phanhoang/Documents/Project/client/src/pages/Home.js",[],"/Users/phanhoang/Documents/Project/client/src/component/router.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/listBook.js",["93"],"import React, { useEffect } from \"react\";\nimport Alert from \"react-s-alert\";\nimport queryString from \"query-string\";\nimport { getBook } from \"../../api/index\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as types from \"../../constants/index\";\nimport { NavLink } from \"react-router-dom\";\nimport { Image } from \"react-bootstrap\";\nexport const Books = (props) => {\n  const dispatch = useDispatch();\n  const getData = async () => {\n    try {\n      const paramsString = queryString.stringify(props.pagination);\n      const result = await getBook(paramsString);\n      if (result.status === 200) {\n        dispatch({ type: types.NEW_BOOKS, payload: result.data.data.data });\n      }\n    } catch (error) {\n      return Alert.error(`<div role=\"alert\">Can Not Get New Book</div>`, {\n        html: true,\n        position: \"top-right\",\n        effect: \"slide\",\n      });\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [props.pagination]);\n  const newBooks = useSelector((state) => {\n    return state.newBooks.data;\n  });\n  return (\n    <div className=\"row\">\n      {newBooks !== {}\n        ? newBooks.map((item) => (\n            <div className={props.position} key={item._id}>\n              {/* start product image */}\n              <NavLink to={`books/${item._id}`}>\n                <div className=\"product-image\">\n                  {/* start product image */}\n                  <div className=\"grid-view-item__link\">\n                    <Image\n                      className=\"lazyload\"\n                      data-src={item.images}\n                      src={item.images}\n                      alt=\"image\"\n                      title={item.description}\n                    />\n                  </div>\n                  <button\n                    className=\"btn btn-success btn-addto-cart\"\n                    type=\"button\"\n                    style={{ marginTop: 3 }}\n                    tabIndex={0}\n                  >\n                    Borrow\n                  </button>\n                  <div className=\"button-set\">\n                    <div className=\"wishlist-btn\">\n                      <button className=\"wishlist add-to-wishlist\">\n                        <i className=\"icon anm anm-heart-l\" />\n                      </button>\n                    </div>\n                  </div>\n                  {/* end product button */}\n                </div>\n                {/* end product image */}\n                {/*start product details */}\n                <div className=\"product-details text-center\">\n                  {/* product name */}\n                  <div className=\"product-name\">\n                    <NavLink to={`books/${item._id}`}>{item.book_name}</NavLink>\n                  </div>\n                  <div className=\"product-price\">\n                    {item.authors.map((author) => (\n                      <span key={author._id} className=\"price\">\n                        {\" \"}\n                        {author.authorName}\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"product-price\">\n                    <span className=\"price\">\n                      {item.publisher.publisherName}\n                    </span>\n                  </div>\n                  <div className=\"product-price\">\n                    <span className=\"price\">{item.price} eCoins/day</span>\n                  </div>\n                </div>\n              </NavLink>\n            </div>\n          ))\n        : null}\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/pages/Library.js",["94"],"import React, { useState, useEffect } from \"react\";\nimport { Books } from \"../component/book/listBook\";\nimport { getAllBookTypes, getAllAuthor, getAllPublisher } from \"../api/index\";\nimport { Form } from \"react-bootstrap\";\n\nexport const Library = () => {\n  let filter = {\n    publisher: [],\n    bookType: [],\n    authors: [],\n  };\n  const [bookTypes, setBookTypes] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  const [publishers, setPublishers] = useState([]);\n  const getBookTypes = async () => {\n    const result = await getAllBookTypes();\n    setBookTypes(result.data.data);\n  };\n  const getAuthors = async () => {\n    const result = await getAllAuthor();\n    setAuthors(result.data.data);\n  };\n  const getPublisher = async () => {\n    const result = await getAllPublisher();\n    setPublishers(result.data.data);\n  };\n  useEffect(() => {\n    getBookTypes();\n    getAuthors();\n    getPublisher();\n  }, []);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 12,\n    searchKey: \"\",\n    publisher: [],\n    bookType: [],\n    authors: [],\n  });\n  const loadMore = () => {\n    setPagination({ ...pagination, limit: pagination.limit + 4 });\n  };\n  return (\n    <div>\n      <div className=\"collection-header\">\n        <div className=\"collection-hero\">\n          <div className=\"collection-hero__image\">\n            <img\n              className=\"blur-up lazyload\"\n              data-src=\"https://eknathmadhavicollege.in/wp-content/uploads/2020/07/library-shelves-banner-photo.jpg\"\n              src=\"https://eknathmadhavicollege.in/wp-content/uploads/2020/07/library-shelves-banner-photo.jpg\"\n            />\n          </div>\n          <div className=\"collection-hero__title-wrapper\">\n            <h1 className=\"collection-hero__title page-width\">\n              Shop Left Sidebar\n            </h1>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\" style={{ marginTop: 20 }}>\n        <div className=\"row\">\n          {/*Sidebar*/}\n          <div className=\"col-12 col-sm-12 col-md-3 col-lg-3 sidebar filterbar\">\n            <div className=\"closeFilter d-block d-md-none d-lg-none\">\n              <i className=\"icon icon anm anm-times-l\" />\n            </div>\n            <div className=\"sidebar_tags\">\n              <div className=\"sidebar_widget filterBox filter-widget\">\n                <Form>\n                  <div className=\"widget-title\">\n                    <h2>Book Types</h2>\n                  </div>\n                  <ul>\n                    {bookTypes.map((item) => (\n                      <li key={item._id}>\n                        <input\n                          type=\"checkbox\"\n                          defaultValue=\"allen-vela\"\n                          value={item._id}\n                          onChange={(e) => {\n                            const value = e.target.checked ? item._id : null;\n                            if (value === null) {\n                              const bookType = filter.bookType;\n                              bookType.filter((item) => item !== item._id);\n                              setPagination({\n                                ...pagination,\n                                bookType: filter.bookType,\n                              });\n                            } else {\n                              filter.bookType.push(value);\n\n                              setPagination({\n                                ...pagination,\n                                bookType: filter.bookType,\n                              });\n                            }\n                          }}\n                        />\n                        <label>\n                          <span>\n                            <span />\n                          </span>\n                          {item.type_name}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </Form>\n              </div>\n\n              <div className=\"sidebar_widget filterBox filter-widget\">\n                <div className=\"widget-title\">\n                  <h2>Authors</h2>\n                </div>\n                <ul>\n                  {authors.map((item) => (\n                    <li key={item._id}>\n                      <input\n                        type=\"checkbox\"\n                        defaultValue=\"allen-vela\"\n                        value={item._id}\n                        onChange={(e) => {\n                          const value = e.target.checked ? item._id : null;\n                          if (value === null) {\n                            const bookType = filter.authors;\n                            bookType.filter((item) => item !== item._id);\n                            setPagination({\n                              ...pagination,\n                              authors: filter.authors,\n                            });\n                          } else {\n                            filter.authors.push(value);\n\n                            setPagination({\n                              ...pagination,\n                              authors: filter.authors,\n                            });\n                          }\n                        }}\n                      />\n                      <label>\n                        <span>\n                          <span />\n                        </span>\n                        {item.authorName}\n                      </label>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"sidebar_widget filterBox filter-widget\">\n                <div className=\"widget-title\">\n                  <h2>Publishers</h2>\n                </div>\n                <ul>\n                  {publishers.map((item) => (\n                    <li key={item._id}>\n                      <input\n                        type=\"checkbox\"\n                        defaultValue=\"allen-vela\"\n                        value={item._id}\n                        onChange={(e) => {\n                          const value = e.target.checked ? item._id : null;\n                          if (value === null) {\n                            const bookType = filter.publisher;\n                            bookType.filter((item) => item !== item._id);\n                            setPagination({\n                              ...pagination,\n                              publisher: filter.publisher,\n                            });\n                          } else {\n                            filter.publisher.push(value);\n\n                            setPagination({\n                              ...pagination,\n                              publisher: filter.publisher,\n                            });\n                          }\n                        }}\n                      />\n                      <label>\n                        <span>\n                          <span />\n                        </span>\n                        {item.publisherName}\n                      </label>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 col-sm-12 col-md-9 col-lg-9 main-col\">\n            <div className=\"category-description\">\n              <h3>Category Description</h3>\n              <p>\n                Lorem Ipsum is simply dummy text of the printing and typesetting\n                industry. Lorem Ipsum has been the industry's standard dummy\n                text ever since the 1500s, when an unknown printer took a galley\n                of type and scrambled it to make a type specimen book. It has\n                survived not only five centuries, but also the leap into\n                electronic typesetting, remaining essentially unchanged. It was\n                popularised in the 1960s with the release of Letraset sheets\n                containing.\n              </p>\n              <p>\n                Contrary to popular belief, Lorem Ipsum is not simply random\n                text. It has roots in a piece of classical Latin literature from\n                45 BC, making it over 2000 years old. Richard McClintock, a\n                Latin professor at Hampden-Sydney College in Virginia, looked up\n                one of the more obscure Latin words, consectetur, from a Lorem\n                Ipsum passage, and going through the cites of the word in\n                classical literature, discovered the undoubtable source.\n              </p>\n            </div>\n            <hr />\n            <div className=\"productList product-load-more\">\n              {/*Toolbar*/}\n              <button\n                type=\"button\"\n                className=\"btn btn-filter d-block d-md-none d-lg-none\"\n              >\n                {\" \"}\n                Product Filters\n              </button>\n              <div className=\"toolbar\">\n                <div className=\"filters-toolbar-wrapper\">\n                  <div className=\"row\">\n                    <div className=\"col-2 col-md-2 col-lg-2 text-center filters-toolbar__item filters-toolbar__item--count d-flex justify-content-center align-items-center\">\n                      <span className=\"filters-toolbar__product-count\">\n                        Showing: 22\n                      </span>\n                    </div>\n                    <div className=\"col-10 col-md-10 col-lg-10 text-right\">\n                      <div className=\"filters-toolbar__item\">\n                        <label htmlFor=\"SortBy\" className=\"hidden\">\n                          Sort\n                        </label>\n                        <select\n                          name=\"SortBy\"\n                          id=\"SortBy\"\n                          className=\"filters-toolbar__input filters-toolbar__input--sort\"\n                        >\n                          <option value=\"title-ascending\" selected=\"selected\">\n                            Sort\n                          </option>\n                          <option>Best Selling</option>\n                          <option>Alphabetically, A-Z</option>\n                          <option>Alphabetically, Z-A</option>\n                          <option>Price, low to high</option>\n                          <option>Price, high to low</option>\n                          <option>Date, new to old</option>\n                          <option>Date, old to new</option>\n                        </select>\n                        <input\n                          className=\"collection-header__default-sort\"\n                          type=\"hidden\"\n                          defaultValue=\"manual\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid-products grid--view-items\">\n              <Books\n                position=\"col-6 col-sm-6 col-md-4 col-lg-3 item\"\n                pagination={pagination}\n              />\n            </div>\n            <div className=\"infinitpaginOuter\">\n              <div className=\"infinitpagin\">\n                <button\n                  onClick={() => {\n                    loadMore();\n                  }}\n                  className=\"btn loadMore\"\n                >\n                  Load More\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/api/index.js",[],"/Users/phanhoang/Documents/Project/client/src/component/header/header.js",["95","96","97","98"],"/Users/phanhoang/Documents/Project/client/src/component/footer/footer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/search.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/index.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/login.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/constants/index.js",[],"/Users/phanhoang/Documents/Project/client/src/hooks/useAuth.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/newbook.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_details.js",["99"],"import React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { Form, Modal, Button } from \"react-bootstrap\";\nimport \"react-tabs/style/react-tabs.css\";\nimport * as yup from \"yup\";\nimport {\n  createReview,\n  getReview,\n  createOrder,\n  getBookDetails,\n} from \"../../api/index\";\nimport { NavLink } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nimport moment from \"moment\";\nimport queryString from \"query-string\";\nconst validationSchema = yup.object().shape({\n  content: yup.string().required(\"Please enter your review\"),\n});\nconst orderValidationSchema = yup.object().shape({\n  totalDate: yup\n    .number()\n    .min(1, \"Please enter a day number\")\n    .required(\"Please enter a date number\"),\n});\nexport const BookDetails = (prop) => {\n  const dispatch = useDispatch();\n  const orderInitialValues = {\n    totalDate: 0,\n  };\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const [showWriteReview, setWriteReview] = useState(false);\n  const [reviews, setReview] = useState([]);\n  const initialValues = {\n    content: \"\",\n  };\n  const [reviewPage, setReviewPage] = useState({\n    page: 1,\n    limit: 5,\n  });\n  const bookId = prop.match.params.book_id;\n  const [bookDetail, setBookDetail] = useState({});\n  const [publisher, setPublisher] = useState({});\n  const getBook = async (bookId) => {\n    const book = await getBookDetails(bookId);\n    setBookDetail(book.data.data);\n    setPublisher(book.data.data.publisher);\n  };\n  useEffect(() => {\n    getBook(bookId);\n  }, [bookId, reviews]);\n  const getReviews = async () => {\n    const paramsString = queryString.stringify(reviewPage);\n    const result = await getReview(bookId, paramsString);\n    setReview(result.data.data);\n    dispatch({ type: \"BOOK_REVIEWS\", payload: result.data.data });\n  };\n  useEffect(() => {\n    getReviews();\n  }, [showWriteReview, reviewPage]);\n  return (\n    <div id=\"MainContent\" className=\"main-content\" role=\"main\">\n      <Alert stack={{ limit: 3 }} />\n      <div className=\"bredcrumbWrap\">\n        <div className=\"container breadcrumbs\">\n          <NavLink to=\"/library\">Books</NavLink>\n          <span aria-hidden=\"true\">›</span>\n          <span>{bookDetail.book_name}</span>\n        </div>\n      </div>\n      {/*End Breadcrumb*/}\n      <div\n        id=\"ProductSection-product-template\"\n        className=\"product-template__container prstyle2 container\"\n      >\n        {/*#ProductSection-product-template*/}\n        <div className=\"product-single product-single-1\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6 col-sm-12 col-12\">\n              <div className=\"product-details-img product-single__photos bottom\">\n                <div className=\"zoompro-wrap product-zoom-right pl-20\">\n                  <div className=\"zoompro-span\">\n                    <img\n                      className=\"blur-up lazyload zoompro\"\n                      alt=\"\"\n                      src={bookDetail.images ? bookDetail.images : null}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-12 col-12\">\n              <div className=\"product-single__meta\">\n                <h1 className=\"product-single__title\">\n                  {bookDetail.book_name}\n                </h1>\n                <div className=\"prInfoRow\">\n                  <div className=\"product-stock\">\n                    Author:\n                    {bookDetail.authors\n                      ? bookDetail.authors.map((item) => (\n                          <span\n                            style={{ marginLeft: 3 }}\n                            className=\"instock\"\n                            key={item._id}\n                          >\n                            {item.authorName}\n                          </span>\n                        ))\n                      : null}\n                  </div>\n                  <div className=\"product-sku\">\n                    Publisher:{\" \"}\n                    <span className=\"variant-sku\">\n                      {publisher.publisherName}\n                    </span>\n                  </div>\n                </div>\n                <p className=\"product-single__price product-single__price-product-template\">\n                  <span className=\"visually-hidden\">Regular price</span>\n                  <span className=\"product-price__price product-price__price-product-template product-price__sale product-price__sale--single\">\n                    <span id=\"ProductPrice-product-template\">\n                      <span className=\"money\">\n                        {bookDetail.price} eCoins/day\n                      </span>\n                    </span>\n                  </span>\n                </p>\n                {/* Product Action */}\n                <div className=\"product-action clearfix\">\n                  <Formik\n                    initialValues={orderInitialValues}\n                    onSubmit={async (values) => {\n                      try {\n                        if (!user._id) {\n                          return Alert.warning(\n                            `<div role=\"alert\">\n                                      Please sign in to read\n                                      </div>`,\n                            {\n                              html: true,\n                              position: \"top-right\",\n                              effect: \"slide\",\n                            }\n                          );\n                        }\n                        const totalPrice = values.totalDate * bookDetail.price;\n                        if (totalPrice > user.wallet) {\n                          return Alert.warning(\n                            `<div role=\"alert\">\n                                      Your eCoins are not enough to borrow this book\n                                      </div>`,\n                            {\n                              html: true,\n                              position: \"top-right\",\n                              effect: \"slide\",\n                            }\n                          );\n                        }\n                        values.price = totalPrice;\n                        values.userId = user._id;\n                        values.bookId = bookDetail._id;\n                        values.endAt = moment(new Date())\n                          .add(values.totalDate, \"day\")\n                          .format(\"YYYY-MM-DD\");\n                        values.startedAt = moment(new Date()).format(\n                          \"YYYY-MM-DD\"\n                        );\n\n                        const result = await createOrder(values);\n                        return Alert.success(\n                          `<div role=\"alert\">\n                                      ${result.data.message}\n                                      </div>`,\n                          {\n                            html: true,\n                            position: \"top-right\",\n                            effect: \"slide\",\n                          }\n                        );\n                      } catch (error) {\n                        return Alert.error(\n                          `<div role=\"alert\">\n                                  ${error.response.data.message}</div>`,\n                          {\n                            html: true,\n                            position: \"top-right\",\n                            effect: \"slide\",\n                          }\n                        );\n                      }\n                    }}\n                    validationSchema={orderValidationSchema}\n                  >\n                    {(props) => (\n                      <Form onSubmit={props.handleSubmit}>\n                        <div style={{ marginBottom: 5 }}>\n                          <span>Day number</span>\n                          <Form.Control\n                            type=\"number\"\n                            name=\"totalDate\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            isInvalid={\n                              props.touched.totalDate && props.errors.totalDate\n                            }\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                            {props.touched.totalDate && props.errors.totalDate}\n                          </Form.Control.Feedback>\n                        </div>\n                        <div className=\"product-form__item--submit\">\n                          <Button\n                            type=\"submit\"\n                            className=\"btn btn-success product-form__cart-submit\"\n                          >\n                            <span>{\"Borrow\"}</span>\n                          </Button>\n                        </div>\n                      </Form>\n                    )}\n                  </Formik>\n                </div>\n                {/* End Product Action */}\n                <div className=\"display-table shareRow\">\n                  <div className=\"display-table-cell medium-up--one-third\">\n                    <div className=\"wishlist-btn\">\n                      <button\n                        className=\"wishlist add-to-wishlist\"\n                        title=\"Add to Wishlist\"\n                      >\n                        <i\n                          className=\"icon anm anm-heart-l\"\n                          aria-hidden=\"true\"\n                        />\n                        <span>Add to Wishlist</span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/*Product Tabs*/}\n            </div>\n          </div>\n          <div className=\"container\" style={{ marginTop: 10 }}>\n            <Tabs>\n              <TabList>\n                <Tab>Description</Tab>\n                <Tab\n                  onClick={() => {\n                    getReviews();\n                  }}\n                >\n                  Review\n                </Tab>\n              </TabList>\n\n              <TabPanel>\n                <p>{bookDetail.description}</p>\n              </TabPanel>\n              <TabPanel>\n                <Modal\n                  show={showWriteReview}\n                  size=\"lg\"\n                  aria-labelledby=\"contained-modal-title-vcenter\"\n                  centered\n                  onHide={() => {\n                    setWriteReview(false);\n                  }}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                      My Review\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Formik\n                      initialValues={initialValues}\n                      onSubmit={async (values) => {\n                        try {\n                          values.user = user._id;\n                          values.bookId = bookId;\n                          await createReview(values);\n                          setWriteReview(false);\n                          return Alert.success(\n                            `<div role=\"alert\">\n                                      Write review successfully\n                                      </div>`,\n                            {\n                              html: true,\n                              position: \"top-right\",\n                              effect: \"slide\",\n                            }\n                          );\n                        } catch (error) {\n                          return Alert.error(\n                            `<div role=\"alert\">\n                                  ${error.response.data.message}</div>`,\n                            {\n                              html: true,\n                              position: \"top-right\",\n                              effect: \"slide\",\n                            }\n                          );\n                        }\n                      }}\n                      validationSchema={validationSchema}\n                    >\n                      {(props) => (\n                        <Form\n                          onSubmit={props.handleSubmit}\n                          id=\"new-review-form\"\n                          className=\"new-review-form\"\n                        >\n                          <h3 className=\"spr-form-title\">Write a review</h3>\n                          <fieldset className=\"spr-form-review\">\n                            <div className=\"spr-form-review-body\">\n                              <label className=\"spr-form-label\">Content</label>\n                              <div className=\"spr-form-input\">\n                                <Form.Control\n                                  className=\"spr-form-input spr-form-input-textarea \"\n                                  name=\"content\"\n                                  as=\"textarea\"\n                                  rows={10}\n                                  placeholder=\"Write your review here\"\n                                  onChange={props.handleChange}\n                                  onBlur={props.handleBlur}\n                                  isInvalid={\n                                    props.touched.content &&\n                                    props.errors.content\n                                  }\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                  {props.touched.content &&\n                                    props.errors.content}\n                                </Form.Control.Feedback>\n                              </div>\n                            </div>\n                          </fieldset>\n                          <fieldset className=\"spr-form-actions\">\n                            <input\n                              type=\"submit\"\n                              className=\"spr-button spr-button-primary button button-primary btn btn-primary\"\n                              defaultValue=\"Submit Review\"\n                            />\n                          </fieldset>\n                        </Form>\n                      )}\n                    </Formik>\n                  </Modal.Body>\n                </Modal>\n                <div id=\"shopify-product-reviews\">\n                  <div className=\"spr-container\">\n                    <div className=\"spr-content\">\n                      {user._id ? (\n                        <div className=\"spr-form clearfix\">\n                          <button\n                            className=\"btn btn-primary\"\n                            onClick={() => {\n                              setWriteReview(true);\n                            }}\n                          >\n                            Write Review\n                          </button>\n                        </div>\n                      ) : null}\n\n                      <div className=\"spr-reviews\">\n                        {reviews.map((review) => (\n                          <div className=\"spr-review\" key={review._id}>\n                            <div className=\"spr-review-header\">\n                              <h3 className=\"spr-review-header-title\">\n                                <img\n                                  src={review.user.photoUrl}\n                                  alt=\"\"\n                                  className=\"border rounded-circle\"\n                                  style={{ width: 35, marginRight: 3 }}\n                                />\n                                {review.user.displayName}\n                              </h3>\n                              <span className=\"spr-review-header-byline\">\n                                <strong>\n                                  {moment(review.createdAt).format(\n                                    \"DD.MM.YYYY HH:mm\"\n                                  )}\n                                </strong>\n                              </span>\n                            </div>\n                            <div className=\"spr-review-content\">\n                              <p className=\"spr-review-content-body\">\n                                {review.content}\n                              </p>\n                            </div>\n                          </div>\n                        ))}\n                        <button\n                          className=\"btn btn-dark\"\n                          onClick={() => {\n                            setReviewPage({\n                              ...reviewPage,\n                              limit: reviewPage.limit + 5,\n                            });\n                          }}\n                        >\n                          Load More\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </TabPanel>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/component/header/slide.js",[],"/Users/phanhoang/Documents/Project/client/src/reducers/review.reducer.js",[],"/Users/phanhoang/Documents/Project/client/src/component/book/book_favorite.js",["100","101","102","103","104"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { myFavorites, myFavoritesLocal } from \"../../api/index\";\nimport { useSelector } from \"react-redux\";\nimport queryString from \"query-string\";\nimport Alert from \"react-s-alert\";\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/slide.css\";\nexport const FavoriteBook = () => {\n  const [books, setBooks] = useState([]);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 5,\n  });\n  const user = useSelector((state) => {\n    return state.login.data;\n  });\n  const userId = localStorage.getItem(\"_id\");\n  const getBookByUser = async () => {\n    try {\n      const paramsString = queryString.stringify(pagination);\n      await myFavorites(localStorage.getItem(\"_id\"), paramsString);\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">\n         ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  const getBookLocal = async () => {\n    try {\n      const ids = [\"\"];\n      const paramsString = queryString.stringify({ ids: ids }, pagination);\n      await myFavoritesLocal(ids, paramsString);\n    } catch (error) {\n      return Alert.error(\n        `<div role=\"alert\">\n         ${error.response.data.message}</div>`,\n        {\n          html: true,\n          position: \"top-right\",\n          effect: \"slide\",\n        }\n      );\n    }\n  };\n  useEffect(() => {\n    if (userId !== null) {\n      getBookByUser();\n    } else {\n      getBookLocal();\n    }\n  }, [pagination]);\n\n  return (\n    <div>\n      <Alert stack={{ limit: 3 }} />\n      <div className=\"page section-header text-center\">\n        <div className=\"page-title\">\n          <div className=\"wrapper\">\n            <h1 className=\"page-width\">Favorite List</h1>\n          </div>\n        </div>\n      </div>\n      {/*End Page Title*/}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 main-col\">\n            <form action=\"#\">\n              <div className=\"wishlist-table table-content table-responsive\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th className=\"product-name text-center alt-font\">\n                        Remove\n                      </th>\n                      <th className=\"product-price text-center alt-font\">\n                        Images\n                      </th>\n                      <th className=\"product-name alt-font\">Book Name</th>\n                      <th className=\"product-price text-center alt-font\">\n                        Price\n                      </th>\n                      <th className=\"product-subtotal text-center alt-font\">\n                        Action\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {books.map((book) => (\n                      <tr>\n                        <td\n                          className=\"product-remove text-center\"\n                          valign=\"middle\"\n                        >\n                          <button className=\"btn btn-danger\">\n                            <i className=\"icon icon anm anm-times-l\" />\n                          </button>\n                        </td>\n                        <td className=\"product-thumbnail text-center\">\n                          <NavLink to={`books/${book._id}`}>\n                            <img\n                              src=\"assets/images/product-images/product-image8.jpg\"\n                              alt=\"\"\n                              title\n                            />\n                          </NavLink>\n                        </td>\n                        <td className=\"product-name\">\n                          <h4 className=\"no-margin\">\n                            <a href=\"#\">Minerva Dress black</a>\n                          </h4>\n                        </td>\n                        <td className=\"product-price text-center\">\n                          <span className=\"amount\">$165.00</span>\n                        </td>\n                        <td className=\"product-subtotal text-center\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-small btn-success\"\n                          >\n                            Borrow\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                <button className=\"btn btn-dark\">Load More</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/phanhoang/Documents/Project/client/src/utils/paypal.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":30,"column":6,"nodeType":"111","endLine":30,"endColumn":24,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":48,"column":13,"nodeType":"115","endLine":52,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":290,"column":23,"nodeType":"115","endLine":290,"endColumn":63},{"ruleId":"116","severity":1,"message":"117","line":298,"column":23,"nodeType":"115","endLine":298,"endColumn":63},{"ruleId":"116","severity":1,"message":"117","line":379,"column":15,"nodeType":"115","endLine":379,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":384,"column":15,"nodeType":"115","endLine":384,"endColumn":55},{"ruleId":"109","severity":1,"message":"118","line":65,"column":6,"nodeType":"111","endLine":65,"endColumn":35,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":17,"nodeType":"122","messageId":"123","endLine":10,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":11,"column":22,"nodeType":"122","messageId":"123","endLine":11,"endColumn":35},{"ruleId":"120","severity":1,"message":"125","line":15,"column":9,"nodeType":"122","messageId":"123","endLine":15,"endColumn":13},{"ruleId":"109","severity":1,"message":"126","line":58,"column":6,"nodeType":"111","endLine":58,"endColumn":18,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"128","line":116,"column":29,"nodeType":"115","endLine":116,"endColumn":41},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getReviews'. Either include it or remove the dependency array.",["132"],"no-unused-vars","'setBooks' is assigned a value but never used.","Identifier","unusedVar","'setPagination' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getBookByUser', 'getBookLocal', and 'userId'. Either include them or remove the dependency array.",["133"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [getData, props.pagination]",{"range":"140","text":"141"},"Update the dependencies array to be: [showWriteReview, reviewPage, getReviews]",{"range":"142","text":"143"},"Update the dependencies array to be: [getBookByUser, getBookLocal, pagination, userId]",{"range":"144","text":"145"},[1039,1057],"[getData, props.pagination]",[2082,2111],"[showWriteReview, reviewPage, getReviews]",[1650,1662],"[getBookByUser, getBookLocal, pagination, userId]"]